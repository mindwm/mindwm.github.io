{"uid":"8cfd09a2aecd5c38","name":"test_scenarios[file:features/2_mindwm_crd_resources.feature-MindWM Custom kubernetes resources-Create Context and check k8s resources]","fullName":"features.2_mindwm_crd_resources#test_scenarios","historyId":"7f2a2c073710599d33eca37d113e5c48","time":{"start":1726683675038,"stop":1726683783901,"duration":108863},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1726682793925,"stop":1726682793925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1726683675038,"stop":1726683675038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1726683675038,"stop":1726683675038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1726683675038,"stop":1726683675038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726683675038,"stop":1726683675038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726683675038,"stop":1726683675038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1726683675040,"stop":1726683675040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1726683675040,"stop":1726683675048,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1726683675040,"stop":1726683675040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1726683675332,"stop":1726683675332,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"passed","steps":[{"name":"Mindwm crd 'xcontexts' is exists","time":{"start":1726683675172,"stop":1726683675172,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xhosts' is exists","time":{"start":1726683675278,"stop":1726683675278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xusers' is exists","time":{"start":1726683675325,"stop":1726683675325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Create context 'pink'","time":{"start":1726683675538,"stop":1726683675539,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Namespace 'context-pink' is ready","time":{"start":1726683677729,"stop":1726683677729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Helm release 'pink-neo4j' deployed in context-pink","time":{"start":1726683682772,"stop":1726683682772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Statefulset 'pink-neo4j' is ready","time":{"start":1726683783860,"stop":1726683783860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'dead-letter' ready state is True","time":{"start":1726683783878,"stop":1726683783878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'iocontext' ready state is True","time":{"start":1726683783885,"stop":1726683783885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'kafka-cdc' ready state is True","time":{"start":1726683783892,"stop":1726683783892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'pong' ready state is True","time":{"start":1726683783900,"stop":1726683783900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"9d63e73420da5531","name":"log","source":"9d63e73420da5531.txt","type":"text/plain","size":694}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"crd_resources"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"2_mindwm_crd_resources"},{"name":"host","value":"localhost"},{"name":"thread","value":"4777-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.2_mindwm_crd_resources"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/2_mindwm_crd_resources.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd_resources', id='106')], language='en', keyword='Feature', name='MindWM Custom kubernetes resources', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88')], id='89'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100')], examples=[], id='101')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=21, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')], examples=[], id='105'))]), comments=[]), uri='file:features/2_mindwm_crd_resources.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature', registry={'106': Tag(location=Location(line=1, column=1), name='@crd_resources', id='106'), '89': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88')], id='89'), '88': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88'), '101': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100')], examples=[], id='101'), '90': Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), '91': Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), '92': Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), '93': Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), '94': Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), '100': Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100'), '105': Scenario(location=Location(line=21, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')], examples=[], id='105'), '102': Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), '103': Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), '104': Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')}, pickles=[Pickle(id='114', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='107', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['90'], id='108', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"'), PickleStep(argument=None, ast_node_ids=['91'], id='109', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['92'], id='110', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should exists'), PickleStep(argument=None, ast_node_ids=['93'], id='111', type=<Type.outcome: 'Outcome'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace'), PickleStep(argument=None, ast_node_ids=['94'], id='112', type=<Type.outcome: 'Outcome'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['100'], id='113', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-pink\" namespace')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['101']), Pickle(id='119', uri='file:features/2_mindwm_crd_resources.feature', name='Delete Resources and Verify Cleanup', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='115', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['102'], id='116', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"'), PickleStep(argument=None, ast_node_ids=['103'], id='117', type=<Type.outcome: 'Outcome'>, text='the context \"pink\" should be deleted'), PickleStep(argument=None, ast_node_ids=['104'], id='118', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should not exists')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['105'])])"},{"name":"feature_source","value":"Source(uri='file:features/2_mindwm_crd_resources.feature', data='@crd_resources\\nFeature: MindWM Custom kubernetes resources\\n\\n  Background:\\n    Given a MindWM environment\\n    \\n  Scenario: Create Context and check k8s resources\\n    When God creates a MindWM context with the name \"pink\"\\n    Then the context should be ready and operable\\n    And namespace \"context-pink\" should exists \\n    And helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace\\n    And statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state\\n    And following knative service is in ready state in \"context-pink\" namespace\\n      | Knative service name |\\n      | dead-letter          |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | pong                 |\\n\\n\\n  Scenario: Delete Resources and Verify Cleanup\\n    When God deletes the MindWM context resource \"pink\"\\n    Then the context \"pink\" should be deleted\\n    And namespace \"context-pink\" should not exists\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='114', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='107', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['90'], id='108', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"'), PickleStep(argument=None, ast_node_ids=['91'], id='109', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['92'], id='110', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should exists'), PickleStep(argument=None, ast_node_ids=['93'], id='111', type=<Type.outcome: 'Outcome'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace'), PickleStep(argument=None, ast_node_ids=['94'], id='112', type=<Type.outcome: 'Outcome'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['100'], id='113', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-pink\" namespace')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['101'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["crd_resources","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","pytest_bdd_scenario","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","namespace(create=False, name='default')"]},"source":"8cfd09a2aecd5c38.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/2_mindwm_crd_resources.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd_resources', id='106')], language='en', keyword='Feature', name='MindWM Custom kubernetes resources', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88')], id='89'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100')], examples=[], id='101')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=21, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')], examples=[], id='105'))]), comments=[]), uri='file:features/2_mindwm_crd_resources.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature', registry={'106': Tag(location=Location(line=1, column=1), name='@crd_resources', id='106'), '89': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88')], id='89'), '88': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='88'), '101': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100')], examples=[], id='101'), '90': Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"', doc_string=None, data_table=None, id='90'), '91': Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='91'), '92': Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should exists', doc_string=None, data_table=None, id='92'), '93': Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace', doc_string=None, data_table=None, id='93'), '94': Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state', doc_string=None, data_table=None, id='94'), '100': Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following knative service is in ready state in \"context-pink\" namespace', doc_string=None, data_table=DataTable(location=Location(line=14, column=7), rows=[TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='Knative service name')], id='95'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='dead-letter')], id='96'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='iocontext')], id='97'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='kafka-cdc')], id='98'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='pong')], id='99')]), id='100'), '105': Scenario(location=Location(line=21, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')], examples=[], id='105'), '102': Step(location=Location(line=22, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"', doc_string=None, data_table=None, id='102'), '103': Step(location=Location(line=23, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"pink\" should be deleted', doc_string=None, data_table=None, id='103'), '104': Step(location=Location(line=24, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-pink\" should not exists', doc_string=None, data_table=None, id='104')}, pickles=[Pickle(id='114', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='107', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['90'], id='108', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"'), PickleStep(argument=None, ast_node_ids=['91'], id='109', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['92'], id='110', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should exists'), PickleStep(argument=None, ast_node_ids=['93'], id='111', type=<Type.outcome: 'Outcome'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace'), PickleStep(argument=None, ast_node_ids=['94'], id='112', type=<Type.outcome: 'Outcome'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['100'], id='113', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-pink\" namespace')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['101']), Pickle(id='119', uri='file:features/2_mindwm_crd_resources.feature', name='Delete Resources and Verify Cleanup', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='115', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['102'], id='116', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"pink\"'), PickleStep(argument=None, ast_node_ids=['103'], id='117', type=<Type.outcome: 'Outcome'>, text='the context \"pink\" should be deleted'), PickleStep(argument=None, ast_node_ids=['104'], id='118', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should not exists')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['105'])])","Source(uri='file:features/2_mindwm_crd_resources.feature', data='@crd_resources\\nFeature: MindWM Custom kubernetes resources\\n\\n  Background:\\n    Given a MindWM environment\\n    \\n  Scenario: Create Context and check k8s resources\\n    When God creates a MindWM context with the name \"pink\"\\n    Then the context should be ready and operable\\n    And namespace \"context-pink\" should exists \\n    And helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace\\n    And statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state\\n    And following knative service is in ready state in \"context-pink\" namespace\\n      | Knative service name |\\n      | dead-letter          |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | pong                 |\\n\\n\\n  Scenario: Delete Resources and Verify Cleanup\\n    When God deletes the MindWM context resource \"pink\"\\n    Then the context \"pink\" should be deleted\\n    And namespace \"context-pink\" should not exists\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='114', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['88'], id='107', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['90'], id='108', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"pink\"'), PickleStep(argument=None, ast_node_ids=['91'], id='109', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['92'], id='110', type=<Type.outcome: 'Outcome'>, text='namespace \"context-pink\" should exists'), PickleStep(argument=None, ast_node_ids=['93'], id='111', type=<Type.outcome: 'Outcome'>, text='helm release \"pink-neo4j\" is deployed in \"context-pink\" namespace'), PickleStep(argument=None, ast_node_ids=['94'], id='112', type=<Type.outcome: 'Outcome'>, text='statefulset \"pink-neo4j\" in namespace \"context-pink\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['100'], id='113', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-pink\" namespace')], tags=[PickleTag(name='@crd_resources', ast_node_id='106')], ast_node_ids=['101'])"]}