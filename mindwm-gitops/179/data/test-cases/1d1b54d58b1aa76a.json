{"uid":"1d1b54d58b1aa76a","name":"test_scenarios[file:features/8_mindwm_two_contexts.feature-Context Resource Readiness and Cleanup Verification-Cleanup Contexts and Verify Resources Are Deleted[table_rows:[line: 62]]]","fullName":"features.8_mindwm_two_contexts#test_scenarios","historyId":"8a1eec9248883ee81630c4a346224edc","time":{"start":1728337497542,"stop":1728337509888,"duration":12346},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1728335254279,"stop":1728335254279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1728337497542,"stop":1728337497542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1728337497542,"stop":1728337497542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1728337497542,"stop":1728337497542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1728337497542,"stop":1728337497542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1728337497542,"stop":1728337497543,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1728337497544,"stop":1728337497545,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1728337497545,"stop":1728337497545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1728337497545,"stop":1728337497550,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"passed","steps":[{"name":"Mindwm crd 'xcontexts' is exist","time":{"start":1728337497586,"stop":1728337497586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xhosts' is exist","time":{"start":1728337497601,"stop":1728337497601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xusers' is exist","time":{"start":1728337497615,"stop":1728337497615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Kubernetes node 'localhost' are True","time":{"start":1728337497657,"stop":1728337497657,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm context aphrodite delete","time":{"start":1728337497679,"stop":1728337497679,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm context aphrodite has been deleted","time":{"start":1728337497706,"stop":1728337497706,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Namespace 'context-aphrodite' has been deleted","time":{"start":1728337509886,"stop":1728337509886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_mindwm_two_contexts.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=<FeaturePathType.PATH: 'path'>, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"mindwm_test"},{"name":"tag","value":"mindwm_two_contexts"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"8_mindwm_two_contexts"},{"name":"host","value":"localhost"},{"name":"thread","value":"4126-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.8_mindwm_two_contexts"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/8_mindwm_two_contexts.feature', feature=Feature(location=Location(line=3, column=1), tags=[Tag(location=Location(line=1, column=1), name='@mindwm_two_contexts', id='917'), Tag(location=Location(line=2, column=1), name='@mindwm_test', id='918')], language='en', keyword='Feature', name='Context Resource Readiness and Cleanup Verification', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903')], examples=[Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907')], id='908')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=55, column=3), tags=[], keyword='Scenario Outline', name='Cleanup Contexts and Verify Resources Are Deleted', description='', steps=[Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911')], examples=[Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915')], id='916'))]), comments=[Comment(location=Location(line=13, column=1), text='    # Verify Namespace'), Comment(location=Location(line=16, column=1), text='    # Verify Deployments'), Comment(location=Location(line=22, column=1), text='    # Verify StatefulSets'), Comment(location=Location(line=25, column=1), text='    # Verify Knative Services'), Comment(location=Location(line=33, column=1), text='    # Verify Knative Triggers'), Comment(location=Location(line=40, column=1), text='    # Verify Knative Brokers'), Comment(location=Location(line=45, column=1), text='    # Verify Kafka Topics and Sources')]), uri='file:features/8_mindwm_two_contexts.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_mindwm_two_contexts.feature', registry={'917': Tag(location=Location(line=1, column=1), name='@mindwm_two_contexts', id='917'), '918': Tag(location=Location(line=2, column=1), name='@mindwm_test', id='918'), '879': Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), '877': Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), '878': Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878'), '908': Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903')], examples=[Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907')], id='908'), '880': Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), '881': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), '882': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), '886': Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), '887': Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), '893': Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), '898': Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), '901': Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), '902': Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), '903': Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903'), '907': Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907'), '904': TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), '905': TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), '906': TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906'), '916': Scenario(location=Location(line=55, column=3), tags=[], keyword='Scenario Outline', name='Cleanup Contexts and Verify Resources Are Deleted', description='', steps=[Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911')], examples=[Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915')], id='916'), '909': Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), '910': Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), '911': Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911'), '915': Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915'), '912': TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), '913': TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), '914': TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')}, pickles=[Pickle(id='931', uri='file:features/8_mindwm_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='919', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='920', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '905'], id='921', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['881', '905'], id='922', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '905'], id='923', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['886', '905'], id='924', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=None, ast_node_ids=['887', '905'], id='925', type=<Type.outcome: 'Outcome'>, text='statefulset \"aphrodite-neo4j\" in namespace \"context-aphrodite\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['893', '905'], id='926', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['898', '905'], id='927', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['901', '905'], id='928', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=None, ast_node_ids=['902', '905'], id='929', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-aphrodite-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['903', '905'], id='930', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-aphrodite-cdc-kafkasource\" is in ready state in \"context-aphrodite\" namespace')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['908', '905']), Pickle(id='944', uri='file:features/8_mindwm_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='932', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='933', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '906'], id='934', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"kypros\"'), PickleStep(argument=None, ast_node_ids=['881', '906'], id='935', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '906'], id='936', type=<Type.outcome: 'Outcome'>, text='namespace \"context-kypros\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['886', '906'], id='937', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=None, ast_node_ids=['887', '906'], id='938', type=<Type.outcome: 'Outcome'>, text='statefulset \"kypros-neo4j\" in namespace \"context-kypros\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['893', '906'], id='939', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['898', '906'], id='940', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['901', '906'], id='941', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=None, ast_node_ids=['902', '906'], id='942', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-kypros-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['903', '906'], id='943', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-kypros-cdc-kafkasource\" is in ready state in \"context-kypros\" namespace')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['908', '906']), Pickle(id='950', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='945', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='946', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '913'], id='947', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['910', '913'], id='948', type=<Type.outcome: 'Outcome'>, text='the context \"aphrodite\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '913'], id='949', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '913']), Pickle(id='956', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='951', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='952', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '914'], id='953', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"kypros\"'), PickleStep(argument=None, ast_node_ids=['910', '914'], id='954', type=<Type.outcome: 'Outcome'>, text='the context \"kypros\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '914'], id='955', type=<Type.outcome: 'Outcome'>, text='namespace \"context-kypros\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '914'])])"},{"name":"feature_source","value":"Source(uri='file:features/8_mindwm_two_contexts.feature', data='@mindwm_two_contexts\\n@mindwm_test\\nFeature: Context Resource Readiness and Cleanup Verification\\n\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario Outline: Create Contexts and Verify All Related Resources Are in Ready State\\n    When God creates a MindWM context with the name \"<context>\"\\n    Then the context should be ready and operable\\n\\n    # Verify Namespace\\n    And namespace \"context-<context>\" should exist\\n\\n    # Verify Deployments\\n    And the following deployments are in a ready state in the \"context-<context>\" namespace\\n      | Deployment name               |\\n      | kafka-cdc-00001-deployment    |\\n      | iocontext-00001-deployment    |\\n\\n    # Verify StatefulSets\\n    And statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state\\n\\n    # Verify Knative Services\\n    And the following knative services are in a ready state in the \"context-<context>\" namespace\\n      | Knative service name |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | dead-letter          |\\n      | pong                 |\\n\\n    # Verify Knative Triggers\\n    And the following knative triggers are in a ready state in the \"context-<context>\" namespace\\n      | Knative trigger name          |\\n      | iocontext-trigger             |\\n      | kafka-cdc-trigger             |\\n      | pong-trigger                  |\\n\\n    # Verify Knative Brokers\\n    And the following knative brokers are in a ready state in the \"context-<context>\" namespace\\n      | Knative broker name           |\\n      | context-broker                |\\n\\n    # Verify Kafka Topics and Sources\\n    And kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace\\n    And kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace\\n\\n\\n    Examples:\\n      | context   |\\n      | aphrodite |\\n      | kypros    |\\n\\n  Scenario Outline: Cleanup Contexts and Verify Resources Are Deleted\\n    When God deletes the MindWM context resource \"<context>\"\\n    Then the context \"<context>\" should be deleted\\n    And namespace \"context-<context>\" should not exist\\n\\n    Examples:\\n      | context   |\\n      | aphrodite |\\n      | kypros    |\\n\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='950', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='945', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='946', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '913'], id='947', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['910', '913'], id='948', type=<Type.outcome: 'Outcome'>, text='the context \"aphrodite\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '913'], id='949', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '913'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"1bdfbca062c3a997","reportUrl":"https://mindwm.github.io/mindwm-gitops/178//#testresult/1bdfbca062c3a997","status":"passed","time":{"start":1728325907446,"stop":1728325919701,"duration":12255}},{"uid":"e0e0797987ff5dcf","reportUrl":"https://mindwm.github.io/mindwm-gitops/176//#testresult/e0e0797987ff5dcf","status":"passed","time":{"start":1728051099833,"stop":1728051112061,"duration":12228}}]},"tags":["pytest_bdd_scenario","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","mindwm_test","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_mindwm_two_contexts.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=<FeaturePathType.PATH: 'path'>, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","mindwm_two_contexts","namespace(create=False, name='default')"]},"source":"1d1b54d58b1aa76a.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/8_mindwm_two_contexts.feature', feature=Feature(location=Location(line=3, column=1), tags=[Tag(location=Location(line=1, column=1), name='@mindwm_two_contexts', id='917'), Tag(location=Location(line=2, column=1), name='@mindwm_test', id='918')], language='en', keyword='Feature', name='Context Resource Readiness and Cleanup Verification', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903')], examples=[Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907')], id='908')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=55, column=3), tags=[], keyword='Scenario Outline', name='Cleanup Contexts and Verify Resources Are Deleted', description='', steps=[Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911')], examples=[Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915')], id='916'))]), comments=[Comment(location=Location(line=13, column=1), text='    # Verify Namespace'), Comment(location=Location(line=16, column=1), text='    # Verify Deployments'), Comment(location=Location(line=22, column=1), text='    # Verify StatefulSets'), Comment(location=Location(line=25, column=1), text='    # Verify Knative Services'), Comment(location=Location(line=33, column=1), text='    # Verify Knative Triggers'), Comment(location=Location(line=40, column=1), text='    # Verify Knative Brokers'), Comment(location=Location(line=45, column=1), text='    # Verify Kafka Topics and Sources')]), uri='file:features/8_mindwm_two_contexts.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_mindwm_two_contexts.feature', registry={'917': Tag(location=Location(line=1, column=1), name='@mindwm_two_contexts', id='917'), '918': Tag(location=Location(line=2, column=1), name='@mindwm_test', id='918'), '879': Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), '877': Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), '878': Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878'), '908': Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903')], examples=[Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907')], id='908'), '880': Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), '881': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), '882': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), '886': Step(location=Location(line=17, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=18, column=7), rows=[TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='Deployment name')], id='883'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc-00001-deployment')], id='884'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='iocontext-00001-deployment')], id='885')]), id='886'), '887': Step(location=Location(line=23, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='887'), '893': Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative service name')], id='888'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='iocontext')], id='889'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-cdc')], id='890'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='dead-letter')], id='891'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong')], id='892')]), id='893'), '898': Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative trigger name')], id='894'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='iocontext-trigger')], id='895'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='kafka-cdc-trigger')], id='896'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='pong-trigger')], id='897')]), id='898'), '901': Step(location=Location(line=41, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Knative broker name')], id='899'), TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='context-broker')], id='900')]), id='901'), '902': Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='902'), '903': Step(location=Location(line=47, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='903'), '907': Examples(location=Location(line=50, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906')], id='907'), '904': TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context')], id='904'), '905': TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='aphrodite')], id='905'), '906': TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='kypros')], id='906'), '916': Scenario(location=Location(line=55, column=3), tags=[], keyword='Scenario Outline', name='Cleanup Contexts and Verify Resources Are Deleted', description='', steps=[Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911')], examples=[Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915')], id='916'), '909': Step(location=Location(line=56, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='909'), '910': Step(location=Location(line=57, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"<context>\" should be deleted', doc_string=None, data_table=None, id='910'), '911': Step(location=Location(line=58, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should not exist', doc_string=None, data_table=None, id='911'), '915': Examples(location=Location(line=60, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), table_body=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')], id='915'), '912': TableRow(location=Location(line=61, column=7), cells=[TableCell(location=Location(line=61, column=9), value='context')], id='912'), '913': TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='aphrodite')], id='913'), '914': TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='kypros')], id='914')}, pickles=[Pickle(id='931', uri='file:features/8_mindwm_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='919', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='920', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '905'], id='921', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['881', '905'], id='922', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '905'], id='923', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['886', '905'], id='924', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=None, ast_node_ids=['887', '905'], id='925', type=<Type.outcome: 'Outcome'>, text='statefulset \"aphrodite-neo4j\" in namespace \"context-aphrodite\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['893', '905'], id='926', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['898', '905'], id='927', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['901', '905'], id='928', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-aphrodite\" namespace'), PickleStep(argument=None, ast_node_ids=['902', '905'], id='929', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-aphrodite-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['903', '905'], id='930', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-aphrodite-cdc-kafkasource\" is in ready state in \"context-aphrodite\" namespace')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['908', '905']), Pickle(id='944', uri='file:features/8_mindwm_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='932', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='933', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '906'], id='934', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"kypros\"'), PickleStep(argument=None, ast_node_ids=['881', '906'], id='935', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '906'], id='936', type=<Type.outcome: 'Outcome'>, text='namespace \"context-kypros\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['886', '906'], id='937', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=None, ast_node_ids=['887', '906'], id='938', type=<Type.outcome: 'Outcome'>, text='statefulset \"kypros-neo4j\" in namespace \"context-kypros\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['893', '906'], id='939', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['898', '906'], id='940', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['901', '906'], id='941', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-kypros\" namespace'), PickleStep(argument=None, ast_node_ids=['902', '906'], id='942', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-kypros-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['903', '906'], id='943', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-kypros-cdc-kafkasource\" is in ready state in \"context-kypros\" namespace')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['908', '906']), Pickle(id='950', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='945', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='946', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '913'], id='947', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['910', '913'], id='948', type=<Type.outcome: 'Outcome'>, text='the context \"aphrodite\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '913'], id='949', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '913']), Pickle(id='956', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='951', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='952', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '914'], id='953', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"kypros\"'), PickleStep(argument=None, ast_node_ids=['910', '914'], id='954', type=<Type.outcome: 'Outcome'>, text='the context \"kypros\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '914'], id='955', type=<Type.outcome: 'Outcome'>, text='namespace \"context-kypros\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '914'])])","Source(uri='file:features/8_mindwm_two_contexts.feature', data='@mindwm_two_contexts\\n@mindwm_test\\nFeature: Context Resource Readiness and Cleanup Verification\\n\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario Outline: Create Contexts and Verify All Related Resources Are in Ready State\\n    When God creates a MindWM context with the name \"<context>\"\\n    Then the context should be ready and operable\\n\\n    # Verify Namespace\\n    And namespace \"context-<context>\" should exist\\n\\n    # Verify Deployments\\n    And the following deployments are in a ready state in the \"context-<context>\" namespace\\n      | Deployment name               |\\n      | kafka-cdc-00001-deployment    |\\n      | iocontext-00001-deployment    |\\n\\n    # Verify StatefulSets\\n    And statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state\\n\\n    # Verify Knative Services\\n    And the following knative services are in a ready state in the \"context-<context>\" namespace\\n      | Knative service name |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | dead-letter          |\\n      | pong                 |\\n\\n    # Verify Knative Triggers\\n    And the following knative triggers are in a ready state in the \"context-<context>\" namespace\\n      | Knative trigger name          |\\n      | iocontext-trigger             |\\n      | kafka-cdc-trigger             |\\n      | pong-trigger                  |\\n\\n    # Verify Knative Brokers\\n    And the following knative brokers are in a ready state in the \"context-<context>\" namespace\\n      | Knative broker name           |\\n      | context-broker                |\\n\\n    # Verify Kafka Topics and Sources\\n    And kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace\\n    And kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace\\n\\n\\n    Examples:\\n      | context   |\\n      | aphrodite |\\n      | kypros    |\\n\\n  Scenario Outline: Cleanup Contexts and Verify Resources Are Deleted\\n    When God deletes the MindWM context resource \"<context>\"\\n    Then the context \"<context>\" should be deleted\\n    And namespace \"context-<context>\" should not exist\\n\\n    Examples:\\n      | context   |\\n      | aphrodite |\\n      | kypros    |\\n\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='950', uri='file:features/8_mindwm_two_contexts.feature', name='Cleanup Contexts and Verify Resources Are Deleted', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='945', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='946', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['909', '913'], id='947', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"aphrodite\"'), PickleStep(argument=None, ast_node_ids=['910', '913'], id='948', type=<Type.outcome: 'Outcome'>, text='the context \"aphrodite\" should be deleted'), PickleStep(argument=None, ast_node_ids=['911', '913'], id='949', type=<Type.outcome: 'Outcome'>, text='namespace \"context-aphrodite\" should not exist')], tags=[PickleTag(name='@mindwm_two_contexts', ast_node_id='917'), PickleTag(name='@mindwm_test', ast_node_id='918')], ast_node_ids=['916', '913'])"]}