{"uid":"b3a4f5c0c30322e9","name":"test_scenarios[file:features/2_mindwm_crd_resources.feature-MindWM Custom kubernetes resources-Create Context and check k8s resources]","fullName":"features.2_mindwm_crd_resources#test_scenarios","historyId":"79ead2fdf1ebaced96dc8e34e2cd0b36","time":{"start":1728331261295,"stop":1728331390843,"duration":129548},"status":"failed","statusMessage":"AssertionError: assert 'False' == 'True'\n  \n  - True\n  + False","statusTrace":"kube = <kubetest.client.TestClient object at 0x7c1580b80ef0>\nstep = PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTable...=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace')\nnamespace = 'context-cyan'\n\n    @then(\"the following knative triggers are in a ready state in the \\\"{namespace}\\\" namespace\")\n    def knative_trigger_exist(kube, step, namespace):\n        title_row, *rows = step.data_table.rows\n        for row in rows:\n            trigger_name = row.cells[0].value\n            trigger = utils.knative_trigger_wait_for(kube, trigger_name, namespace)\n            is_ready = utils.resource_get_condition(trigger['status'], 'Ready')\n            with allure.step(f\"Knative trigger '{trigger_name}' ready state is {is_ready}\"):\n                pass\n>           assert(is_ready == 'True')\nE           AssertionError: assert 'False' == 'True'\nE             \nE             - True\nE             + False\n\nconftest.py:352: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1728330483584,"stop":1728330483584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1728331261295,"stop":1728331261296,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1728331261295,"stop":1728331261295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1728331261295,"stop":1728331261295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1728331261296,"stop":1728331261296,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1728331261296,"stop":1728331261296,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1728331261298,"stop":1728331261298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1728331261298,"stop":1728331261298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1728331261298,"stop":1728331261303,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1728331261424,"stop":1728331261424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'False' == 'True'\n  \n  - True\n  + False","statusTrace":"kube = <kubetest.client.TestClient object at 0x7c1580b80ef0>\nstep = PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTable...=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace')\nnamespace = 'context-cyan'\n\n    @then(\"the following knative triggers are in a ready state in the \\\"{namespace}\\\" namespace\")\n    def knative_trigger_exist(kube, step, namespace):\n        title_row, *rows = step.data_table.rows\n        for row in rows:\n            trigger_name = row.cells[0].value\n            trigger = utils.knative_trigger_wait_for(kube, trigger_name, namespace)\n            is_ready = utils.resource_get_condition(trigger['status'], 'Ready')\n            with allure.step(f\"Knative trigger '{trigger_name}' ready state is {is_ready}\"):\n                pass\n>           assert(is_ready == 'True')\nE           AssertionError: assert 'False' == 'True'\nE             \nE             - True\nE             + False\n\nconftest.py:352: AssertionError","steps":[{"name":"Mindwm crd 'xcontexts' is exist","time":{"start":1728331261336,"stop":1728331261337,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xhosts' is exist","time":{"start":1728331261351,"stop":1728331261351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xusers' is exist","time":{"start":1728331261375,"stop":1728331261375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Kubernetes node 'localhost' are True","time":{"start":1728331261415,"stop":1728331261415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Create context 'cyan'","time":{"start":1728331261444,"stop":1728331261444,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Namespace 'context-cyan' is ready","time":{"start":1728331262614,"stop":1728331262614,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Helm release 'cyan-neo4j' deployed in context-cyan","time":{"start":1728331272819,"stop":1728331272819,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Statefulset 'cyan-neo4j' in 'context-cyan' is ready","time":{"start":1728331390720,"stop":1728331390720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'context-cyan'/'dead-letter' ready state is True","time":{"start":1728331390765,"stop":1728331390765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'context-cyan'/'iocontext' ready state is True","time":{"start":1728331390778,"stop":1728331390778,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'context-cyan'/'kafka-cdc' ready state is True","time":{"start":1728331390788,"stop":1728331390788,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'context-cyan'/'pong' ready state is True","time":{"start":1728331390796,"stop":1728331390796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative trigger 'iocontext-trigger' ready state is False","time":{"start":1728331390837,"stop":1728331390837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":13,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=<FeaturePathType.PATH: 'path'>, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"mindwm_crd_resources"},{"name":"tag","value":"mindwm_test"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"2_mindwm_crd_resources"},{"name":"host","value":"localhost"},{"name":"thread","value":"4691-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.2_mindwm_crd_resources"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/2_mindwm_crd_resources.feature', feature=Feature(location=Location(line=3, column=1), tags=[Tag(location=Location(line=1, column=1), name='@mindwm_crd_resources', id='263'), Tag(location=Location(line=2, column=1), name='@mindwm_test', id='264')], language='en', keyword='Feature', name='MindWM Custom kubernetes resources', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206')], id='207'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228')], examples=[], id='229')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=32, column=3), tags=[], keyword='Scenario', name='Create User and check k8s resources', description='', steps=[Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241')], examples=[], id='242')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=46, column=3), tags=[], keyword='Scenario', name='Create Host and check k8s resources', description='', steps=[Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252')], examples=[], id='253')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=60, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')], examples=[], id='262'))]), comments=[]), uri='file:features/2_mindwm_crd_resources.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature', registry={'263': Tag(location=Location(line=1, column=1), name='@mindwm_crd_resources', id='263'), '264': Tag(location=Location(line=2, column=1), name='@mindwm_test', id='264'), '207': Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206')], id='207'), '205': Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), '206': Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206'), '229': Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228')], examples=[], id='229'), '208': Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), '209': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), '210': Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), '211': Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), '212': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), '218': Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), '223': Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), '226': Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), '227': Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), '228': Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228'), '242': Scenario(location=Location(line=32, column=3), tags=[], keyword='Scenario', name='Create User and check k8s resources', description='', steps=[Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241')], examples=[], id='242'), '230': Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), '231': Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), '232': Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), '235': Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), '238': Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), '241': Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241'), '253': Scenario(location=Location(line=46, column=3), tags=[], keyword='Scenario', name='Create Host and check k8s resources', description='', steps=[Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252')], examples=[], id='253'), '243': Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), '244': Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), '245': Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), '249': Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), '252': Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252'), '262': Scenario(location=Location(line=60, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')], examples=[], id='262'), '254': Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), '255': Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), '256': Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), '257': Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), '258': Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), '259': Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), '260': Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), '261': Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')}, pickles=[Pickle(id='277', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='265', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='266', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['208'], id='267', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"'), PickleStep(argument=None, ast_node_ids=['209'], id='268', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['210'], id='269', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should exist'), PickleStep(argument=None, ast_node_ids=['211'], id='270', type=<Type.outcome: 'Outcome'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['212'], id='271', type=<Type.outcome: 'Outcome'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['218'], id='272', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['223'], id='273', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['226'], id='274', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['227'], id='275', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['228'], id='276', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['229']), Pickle(id='286', uri='file:features/2_mindwm_crd_resources.feature', name='Create User and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='278', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='279', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['230'], id='280', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"'), PickleStep(argument=None, ast_node_ids=['231'], id='281', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['232'], id='282', type=<Type.outcome: 'Outcome'>, text='namespace \"user-bob\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='user-broker')])])), ast_node_ids=['235'], id='283', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='context-cyan-to-user-bob')])])), ast_node_ids=['238'], id='284', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='user-bob-to-context-cyan')])])), ast_node_ids=['241'], id='285', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['242']), Pickle(id='294', uri='file:features/2_mindwm_crd_resources.feature', name='Create Host and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='287', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='288', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['243'], id='289', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"'), PickleStep(argument=None, ast_node_ids=['244'], id='290', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['245'], id='291', type=<Type.outcome: 'Outcome'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='user-bob-to-context-cyan')]), PickleTableRow(cells=[PickleTableCell(value='user-broker-to-workstation-broker-trigger')])])), ast_node_ids=['249'], id='292', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='workstation-host-broker')])])), ast_node_ids=['252'], id='293', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['253']), Pickle(id='305', uri='file:features/2_mindwm_crd_resources.feature', name='Delete Resources and Verify Cleanup', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='295', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='296', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['254'], id='297', type=<Type.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"'), PickleStep(argument=None, ast_node_ids=['255'], id='298', type=<Type.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted'), PickleStep(argument=None, ast_node_ids=['256'], id='299', type=<Type.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"'), PickleStep(argument=None, ast_node_ids=['257'], id='300', type=<Type.outcome: 'Outcome'>, text='the user \"bob\" should be deleted'), PickleStep(argument=None, ast_node_ids=['258'], id='301', type=<Type.outcome: 'Outcome'>, text='namespace \"user-bob\" should not exist'), PickleStep(argument=None, ast_node_ids=['259'], id='302', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"'), PickleStep(argument=None, ast_node_ids=['260'], id='303', type=<Type.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted'), PickleStep(argument=None, ast_node_ids=['261'], id='304', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should not exist')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['262'])])"},{"name":"feature_source","value":"Source(uri='file:features/2_mindwm_crd_resources.feature', data='@mindwm_crd_resources\\n@mindwm_test\\nFeature: MindWM Custom kubernetes resources\\n\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n    \\n  Scenario: Create Context and check k8s resources\\n    When God creates a MindWM context with the name \"cyan\"\\n    Then the context should be ready and operable\\n    And namespace \"context-cyan\" should exist \\n    And helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace\\n    And statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state\\n    And the following knative services are in a ready state in the \"context-cyan\" namespace\\n      | Knative service name |\\n      | dead-letter          |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | pong                 |\\n    And the following knative triggers are in a ready state in the \"context-cyan\" namespace\\n      | Knative trigger name |\\n      | iocontext-trigger    |\\n      | kafka-cdc-trigger    |\\n      | pong-trigger         |\\n    And the following knative brokers are in a ready state in the \"context-cyan\" namespace\\n      | Knative broker name |\\n      | context-broker      |\\n    And kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace\\n    And kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace\\n  \\n  Scenario: Create User and check k8s resources\\n    When God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"\\n    Then the user resource should be ready and operable\\n    And namespace \"user-bob\" should exist \\n    And the following knative brokers are in a ready state in the \"user-bob\" namespace\\n      | Knative broker name |\\n      | user-broker         |\\n    And the following knative triggers are in a ready state in the \"context-cyan\" namespace\\n      | Knative trigger name          |\\n      | context-cyan-to-user-bob    |\\n    And the following knative triggers are in a ready state in the \"user-bob\" namespace\\n      | Knative trigger name          |\\n      | user-bob-to-context-cyan    |\\n\\n  Scenario: Create Host and check k8s resources\\n    When God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"\\n    Then the host resource should be ready and operable\\n    And NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace\\n    And the following knative triggers are in a ready state in the \"user-bob\" namespace\\n      | Knative trigger name                    |\\n      | user-bob-to-context-cyan              |\\n      | user-broker-to-workstation-broker-trigger    |\\n    And the following knative brokers are in a ready state in the \"user-bob\" namespace\\n      | Knative broker name  |\\n      | workstation-host-broker   |\\n\\n\\n\\n  Scenario: Delete Resources and Verify Cleanup\\n\\n    When God deletes the MindWM host resource \"workstation\"\\n    Then the host \"workstation\" should be deleted\\n\\n    When God deletes the MindWM user resource \"bob\"\\n    Then the user \"bob\" should be deleted\\n    And namespace \"user-bob\" should not exist\\n\\n    When God deletes the MindWM context resource \"cyan\"\\n    Then the context \"cyan\" should be deleted\\n    And namespace \"context-cyan\" should not exist\\n\\n\\n\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='277', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='265', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='266', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['208'], id='267', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"'), PickleStep(argument=None, ast_node_ids=['209'], id='268', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['210'], id='269', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should exist'), PickleStep(argument=None, ast_node_ids=['211'], id='270', type=<Type.outcome: 'Outcome'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['212'], id='271', type=<Type.outcome: 'Outcome'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['218'], id='272', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['223'], id='273', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['226'], id='274', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['227'], id='275', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['228'], id='276', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['229'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"cd61681364f1f585","reportUrl":"https://mindwm.github.io/mindwm-gitops/178//#testresult/cd61681364f1f585","status":"passed","time":{"start":1728324600093,"stop":1728324725927,"duration":125834}},{"uid":"219cdd9ff4101c0","reportUrl":"https://mindwm.github.io/mindwm-gitops/177//#testresult/219cdd9ff4101c0","status":"passed","time":{"start":1728322845091,"stop":1728322972983,"duration":127892}},{"uid":"9c85003307accf97","reportUrl":"https://mindwm.github.io/mindwm-gitops/177//#testresult/9c85003307accf97","status":"passed","time":{"start":1728055250591,"stop":1728055367319,"duration":116728}},{"uid":"2b7597fa58c4c812","reportUrl":"https://mindwm.github.io/mindwm-gitops/176//#testresult/2b7597fa58c4c812","status":"passed","time":{"start":1728049802247,"stop":1728049923908,"duration":121661}},{"uid":"8defeba5aa34f277","reportUrl":"https://mindwm.github.io/mindwm-gitops/175//#testresult/8defeba5aa34f277","status":"passed","time":{"start":1728046504895,"stop":1728046619911,"duration":115016}}]},"tags":["mindwm_crd_resources","pytest_bdd_scenario","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","mindwm_test","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=<FeaturePathType.PATH: 'path'>, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","namespace(create=False, name='default')"]},"source":"b3a4f5c0c30322e9.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/2_mindwm_crd_resources.feature', feature=Feature(location=Location(line=3, column=1), tags=[Tag(location=Location(line=1, column=1), name='@mindwm_crd_resources', id='263'), Tag(location=Location(line=2, column=1), name='@mindwm_test', id='264')], language='en', keyword='Feature', name='MindWM Custom kubernetes resources', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206')], id='207'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228')], examples=[], id='229')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=32, column=3), tags=[], keyword='Scenario', name='Create User and check k8s resources', description='', steps=[Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241')], examples=[], id='242')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=46, column=3), tags=[], keyword='Scenario', name='Create Host and check k8s resources', description='', steps=[Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252')], examples=[], id='253')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=60, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')], examples=[], id='262'))]), comments=[]), uri='file:features/2_mindwm_crd_resources.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/2_mindwm_crd_resources.feature', registry={'263': Tag(location=Location(line=1, column=1), name='@mindwm_crd_resources', id='263'), '264': Tag(location=Location(line=2, column=1), name='@mindwm_test', id='264'), '207': Background(location=Location(line=5, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206')], id='207'), '205': Step(location=Location(line=6, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='205'), '206': Step(location=Location(line=7, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='206'), '229': Scenario(location=Location(line=9, column=3), tags=[], keyword='Scenario', name='Create Context and check k8s resources', description='', steps=[Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228')], examples=[], id='229'), '208': Step(location=Location(line=10, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"', doc_string=None, data_table=None, id='208'), '209': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='209'), '210': Step(location=Location(line=12, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should exist', doc_string=None, data_table=None, id='210'), '211': Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace', doc_string=None, data_table=None, id='211'), '212': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state', doc_string=None, data_table=None, id='212'), '218': Step(location=Location(line=15, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=16, column=7), rows=[TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='Knative service name')], id='213'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='dead-letter')], id='214'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='iocontext')], id='215'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='kafka-cdc')], id='216'), TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='pong')], id='217')]), id='218'), '223': Step(location=Location(line=21, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=22, column=7), rows=[TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='Knative trigger name')], id='219'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='iocontext-trigger')], id='220'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='kafka-cdc-trigger')], id='221'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='pong-trigger')], id='222')]), id='223'), '226': Step(location=Location(line=26, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=27, column=7), rows=[TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='Knative broker name')], id='224'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='context-broker')], id='225')]), id='226'), '227': Step(location=Location(line=29, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='227'), '228': Step(location=Location(line=30, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace', doc_string=None, data_table=None, id='228'), '242': Scenario(location=Location(line=32, column=3), tags=[], keyword='Scenario', name='Create User and check k8s resources', description='', steps=[Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241')], examples=[], id='242'), '230': Step(location=Location(line=33, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"', doc_string=None, data_table=None, id='230'), '231': Step(location=Location(line=34, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='231'), '232': Step(location=Location(line=35, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should exist', doc_string=None, data_table=None, id='232'), '235': Step(location=Location(line=36, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=37, column=7), rows=[TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='Knative broker name')], id='233'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='user-broker')], id='234')]), id='235'), '238': Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace', doc_string=None, data_table=DataTable(location=Location(line=40, column=7), rows=[TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='Knative trigger name')], id='236'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='context-cyan-to-user-bob')], id='237')]), id='238'), '241': Step(location=Location(line=42, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Knative trigger name')], id='239'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='user-bob-to-context-cyan')], id='240')]), id='241'), '253': Scenario(location=Location(line=46, column=3), tags=[], keyword='Scenario', name='Create Host and check k8s resources', description='', steps=[Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252')], examples=[], id='253'), '243': Step(location=Location(line=47, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"', doc_string=None, data_table=None, id='243'), '244': Step(location=Location(line=48, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='244'), '245': Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace', doc_string=None, data_table=None, id='245'), '249': Step(location=Location(line=50, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=51, column=7), rows=[TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='Knative trigger name')], id='246'), TableRow(location=Location(line=52, column=7), cells=[TableCell(location=Location(line=52, column=9), value='user-bob-to-context-cyan')], id='247'), TableRow(location=Location(line=53, column=7), cells=[TableCell(location=Location(line=53, column=9), value='user-broker-to-workstation-broker-trigger')], id='248')]), id='249'), '252': Step(location=Location(line=54, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace', doc_string=None, data_table=DataTable(location=Location(line=55, column=7), rows=[TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='Knative broker name')], id='250'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='workstation-host-broker')], id='251')]), id='252'), '262': Scenario(location=Location(line=60, column=3), tags=[], keyword='Scenario', name='Delete Resources and Verify Cleanup', description='', steps=[Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')], examples=[], id='262'), '254': Step(location=Location(line=62, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"', doc_string=None, data_table=None, id='254'), '255': Step(location=Location(line=63, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted', doc_string=None, data_table=None, id='255'), '256': Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"', doc_string=None, data_table=None, id='256'), '257': Step(location=Location(line=66, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user \"bob\" should be deleted', doc_string=None, data_table=None, id='257'), '258': Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"user-bob\" should not exist', doc_string=None, data_table=None, id='258'), '259': Step(location=Location(line=69, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"', doc_string=None, data_table=None, id='259'), '260': Step(location=Location(line=70, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted', doc_string=None, data_table=None, id='260'), '261': Step(location=Location(line=71, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-cyan\" should not exist', doc_string=None, data_table=None, id='261')}, pickles=[Pickle(id='277', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='265', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='266', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['208'], id='267', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"'), PickleStep(argument=None, ast_node_ids=['209'], id='268', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['210'], id='269', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should exist'), PickleStep(argument=None, ast_node_ids=['211'], id='270', type=<Type.outcome: 'Outcome'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['212'], id='271', type=<Type.outcome: 'Outcome'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['218'], id='272', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['223'], id='273', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['226'], id='274', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['227'], id='275', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['228'], id='276', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['229']), Pickle(id='286', uri='file:features/2_mindwm_crd_resources.feature', name='Create User and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='278', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='279', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['230'], id='280', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"'), PickleStep(argument=None, ast_node_ids=['231'], id='281', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['232'], id='282', type=<Type.outcome: 'Outcome'>, text='namespace \"user-bob\" should exist'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='user-broker')])])), ast_node_ids=['235'], id='283', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='context-cyan-to-user-bob')])])), ast_node_ids=['238'], id='284', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='user-bob-to-context-cyan')])])), ast_node_ids=['241'], id='285', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['242']), Pickle(id='294', uri='file:features/2_mindwm_crd_resources.feature', name='Create Host and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='287', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='288', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['243'], id='289', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"'), PickleStep(argument=None, ast_node_ids=['244'], id='290', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['245'], id='291', type=<Type.outcome: 'Outcome'>, text='NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='user-bob-to-context-cyan')]), PickleTableRow(cells=[PickleTableCell(value='user-broker-to-workstation-broker-trigger')])])), ast_node_ids=['249'], id='292', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"user-bob\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='workstation-host-broker')])])), ast_node_ids=['252'], id='293', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"user-bob\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['253']), Pickle(id='305', uri='file:features/2_mindwm_crd_resources.feature', name='Delete Resources and Verify Cleanup', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='295', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='296', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['254'], id='297', type=<Type.action: 'Action'>, text='God deletes the MindWM host resource \"workstation\"'), PickleStep(argument=None, ast_node_ids=['255'], id='298', type=<Type.outcome: 'Outcome'>, text='the host \"workstation\" should be deleted'), PickleStep(argument=None, ast_node_ids=['256'], id='299', type=<Type.action: 'Action'>, text='God deletes the MindWM user resource \"bob\"'), PickleStep(argument=None, ast_node_ids=['257'], id='300', type=<Type.outcome: 'Outcome'>, text='the user \"bob\" should be deleted'), PickleStep(argument=None, ast_node_ids=['258'], id='301', type=<Type.outcome: 'Outcome'>, text='namespace \"user-bob\" should not exist'), PickleStep(argument=None, ast_node_ids=['259'], id='302', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"cyan\"'), PickleStep(argument=None, ast_node_ids=['260'], id='303', type=<Type.outcome: 'Outcome'>, text='the context \"cyan\" should be deleted'), PickleStep(argument=None, ast_node_ids=['261'], id='304', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should not exist')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['262'])])","Source(uri='file:features/2_mindwm_crd_resources.feature', data='@mindwm_crd_resources\\n@mindwm_test\\nFeature: MindWM Custom kubernetes resources\\n\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n    \\n  Scenario: Create Context and check k8s resources\\n    When God creates a MindWM context with the name \"cyan\"\\n    Then the context should be ready and operable\\n    And namespace \"context-cyan\" should exist \\n    And helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace\\n    And statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state\\n    And the following knative services are in a ready state in the \"context-cyan\" namespace\\n      | Knative service name |\\n      | dead-letter          |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | pong                 |\\n    And the following knative triggers are in a ready state in the \"context-cyan\" namespace\\n      | Knative trigger name |\\n      | iocontext-trigger    |\\n      | kafka-cdc-trigger    |\\n      | pong-trigger         |\\n    And the following knative brokers are in a ready state in the \"context-cyan\" namespace\\n      | Knative broker name |\\n      | context-broker      |\\n    And kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace\\n    And kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace\\n  \\n  Scenario: Create User and check k8s resources\\n    When God creates a MindWM user resource with the name \"bob\" and connects it to the context \"cyan\"\\n    Then the user resource should be ready and operable\\n    And namespace \"user-bob\" should exist \\n    And the following knative brokers are in a ready state in the \"user-bob\" namespace\\n      | Knative broker name |\\n      | user-broker         |\\n    And the following knative triggers are in a ready state in the \"context-cyan\" namespace\\n      | Knative trigger name          |\\n      | context-cyan-to-user-bob    |\\n    And the following knative triggers are in a ready state in the \"user-bob\" namespace\\n      | Knative trigger name          |\\n      | user-bob-to-context-cyan    |\\n\\n  Scenario: Create Host and check k8s resources\\n    When God creates a MindWM host resource with the name \"workstation\" and connects it to the user \"bob\"\\n    Then the host resource should be ready and operable\\n    And NatsJetStreamChannel \"workstation-host-broker-kne-trigger\" is ready in \"user-bob\" namespace\\n    And the following knative triggers are in a ready state in the \"user-bob\" namespace\\n      | Knative trigger name                    |\\n      | user-bob-to-context-cyan              |\\n      | user-broker-to-workstation-broker-trigger    |\\n    And the following knative brokers are in a ready state in the \"user-bob\" namespace\\n      | Knative broker name  |\\n      | workstation-host-broker   |\\n\\n\\n\\n  Scenario: Delete Resources and Verify Cleanup\\n\\n    When God deletes the MindWM host resource \"workstation\"\\n    Then the host \"workstation\" should be deleted\\n\\n    When God deletes the MindWM user resource \"bob\"\\n    Then the user \"bob\" should be deleted\\n    And namespace \"user-bob\" should not exist\\n\\n    When God deletes the MindWM context resource \"cyan\"\\n    Then the context \"cyan\" should be deleted\\n    And namespace \"context-cyan\" should not exist\\n\\n\\n\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='277', uri='file:features/2_mindwm_crd_resources.feature', name='Create Context and check k8s resources', language='en', steps=[PickleStep(argument=None, ast_node_ids=['205'], id='265', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['206'], id='266', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['208'], id='267', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"cyan\"'), PickleStep(argument=None, ast_node_ids=['209'], id='268', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['210'], id='269', type=<Type.outcome: 'Outcome'>, text='namespace \"context-cyan\" should exist'), PickleStep(argument=None, ast_node_ids=['211'], id='270', type=<Type.outcome: 'Outcome'>, text='helm release \"cyan-neo4j\" is deployed in \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['212'], id='271', type=<Type.outcome: 'Outcome'>, text='statefulset \"cyan-neo4j\" in namespace \"context-cyan\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['218'], id='272', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['223'], id='273', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['226'], id='274', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-cyan\" namespace'), PickleStep(argument=None, ast_node_ids=['227'], id='275', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-cyan-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['228'], id='276', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-cyan-cdc-kafkasource\" is in ready state in \"context-cyan\" namespace')], tags=[PickleTag(name='@mindwm_crd_resources', ast_node_id='263'), PickleTag(name='@mindwm_test', ast_node_id='264')], ast_node_ids=['229'])"]}