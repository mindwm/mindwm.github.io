{"uid":"37231f1ddc8d9768","name":"test_tracesql","fullName":"test_ping_pong.Test_PingPong#test_tracesql","historyId":"18075874899d2e7549049e2062a0701d","time":{"start":1725997128636,"stop":1725997133636,"duration":5000},"status":"broken","statusMessage":"requests.exceptions.InvalidURL: Invalid URL 'http:///api/traces/b23217d3c9fe4d7f87a14641bf2ffae3': No host supplied","statusTrace":"self = <test_ping_pong.Test_PingPong object at 0x728bb2902270>\n\n    @pytest.mark.depends(on=['test_send_ping_context_broker'])\n    def test_tracesql(self):\n        # TODO(@metacoma) wait for resource\n        #url = f\"http://tempo.mindwm.local/api/traces/{trace_id}\"\n        url = f\"http://{ingress_host}/api/traces/{trace_id}\"\n        headers = {\n            \"Host\": \"tempo.mindwm.local\"\n        }\n        print(f\"request url {url}\")\n        time.sleep(5)\n        # Perform the GET request\n>       response = requests.get(url, headers = headers)\n\ntest_ping_pong.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/requests/api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\n.venv/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n.venv/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n.venv/lib/python3.12/site-packages/requests/sessions.py:484: in prepare_request\n    p.prepare(\n.venv/lib/python3.12/site-packages/requests/models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [GET]>\nurl = 'http:///api/traces/b23217d3c9fe4d7f87a14641bf2ffae3'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\n    \n        if not host:\n>           raise InvalidURL(f\"Invalid URL {url!r}: No host supplied\")\nE           requests.exceptions.InvalidURL: Invalid URL 'http:///api/traces/b23217d3c9fe4d7f87a14641bf2ffae3': No host supplied\n\n.venv/lib/python3.12/site-packages/requests/models.py:444: InvalidURL","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"depends(on=['test_send_ping_context_broker'])"},{"name":"suite","value":"test_ping_pong"},{"name":"subSuite","value":"Test_PingPong"},{"name":"host","value":"localhost"},{"name":"thread","value":"3856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_ping_pong"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"5f86fe00d09663c8","reportUrl":"https://mindwm.github.io/mindwm-gitops/93//#testresult/5f86fe00d09663c8","status":"failed","statusDetails":"AssertionError: Response code 404 != 200\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","time":{"start":1725995806757,"stop":1725995811793,"duration":5036}}]},"tags":["depends(on=['test_send_ping_context_broker'])"]},"source":"37231f1ddc8d9768.json","parameterValues":[]}