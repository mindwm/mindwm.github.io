{"uid":"14e321f2301ea771","name":"test_service","fullName":"test_redpanda.Test_Redpanda#test_service","historyId":"7f5b06913b5e5dbe3e346da09f630d26","time":{"start":1725997133905,"stop":1725997133924,"duration":19},"status":"failed","statusMessage":"AssertionError: Service 'neo4j-cdc' was not found in namespace 'redpanda'","statusTrace":"self = <test_redpanda.Test_Redpanda object at 0x728bb29029c0>\nkube = <kubetest.client.TestClient object at 0x728bb312d130>\n\n    @pytest.mark.dependency(depends=['test_ns', 'test_statefulset', 'test_deployment'])\n    @pytest.mark.dependency(name = \"service\", depends=['ns'], scope = 'session')\n    def test_service(self, kube):\n        if hasattr(self, 'service'):\n            services = kube.get_services(self.namespace)\n            for service_name in self.service:\n                service = services.get(service_name)\n>               assert service is not None, f\"Service '{service_name}' was not found in namespace '{self.namespace}'\"\nE               AssertionError: Service 'neo4j-cdc' was not found in namespace 'redpanda'\n\nmindwm.py:40: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"kubeconfig","time":{"start":1725997133879,"stop":1725997133879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1725997133879,"stop":1725997133879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1725997133879,"stop":1725997133904,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"dependency(name='service', depends=['ns'], scope='session')"},{"name":"suite","value":"test_redpanda"},{"name":"subSuite","value":"Test_Redpanda"},{"name":"host","value":"localhost"},{"name":"thread","value":"3856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_redpanda"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"58345cbdf1b0d850","reportUrl":"https://mindwm.github.io/mindwm-gitops/93//#testresult/58345cbdf1b0d850","status":"passed","time":{"start":1725995812043,"stop":1725995812063,"duration":20}}]},"tags":["dependency(name='service', depends=['ns'], scope='session')"]},"source":"14e321f2301ea771.json","parameterValues":[]}