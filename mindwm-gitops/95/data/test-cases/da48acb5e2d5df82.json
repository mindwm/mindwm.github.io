{"uid":"da48acb5e2d5df82","name":"test_deployment","fullName":"test_monitoring.Test_Monitoring#test_deployment","historyId":"2438cca84cafaca3df28909e51fac0de","time":{"start":1725999676091,"stop":1725999676169,"duration":78},"status":"failed","statusMessage":"AssertionError: Deployment 'vm-aio-grafana' status is not True in 'monitoring', 2 != 1","statusTrace":"self = <test_monitoring.Test_Monitoring object at 0x786a572937d0>\nkube = <kubetest.client.TestClient object at 0x786a56b2d5b0>\n\n    @pytest.mark.dependency(name = \"deployment\", depends=['ns'], scope = 'session')\n    def test_deployment(self, kube):\n        if hasattr(self, 'deployment'):\n            deployments = kube.get_deployments(self.namespace)\n            for deployment_name in self.deployment:\n                deployment = deployments.get(deployment_name)\n                assert deployment is not None,  f\"Deployment '{deployment_name}' was not found in namespace '{self.namespace}'\"\n                status = deployment.status()\n                replicas = status.replicas\n                ready_replicas = status.ready_replicas\n>               assert replicas == ready_replicas,  f\"Deployment '{deployment_name}' status is not True in '{self.namespace}', {replicas} != {ready_replicas}\"\nE               AssertionError: Deployment 'vm-aio-grafana' status is not True in 'monitoring', 2 != 1\n\nmindwm.py:23: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"kubecontext","time":{"start":1725999676063,"stop":1725999676063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1725999676063,"stop":1725999676090,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1725999676063,"stop":1725999676063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"dependency(name='deployment', depends=['ns'], scope='session')"},{"name":"suite","value":"test_monitoring"},{"name":"subSuite","value":"Test_Monitoring"},{"name":"host","value":"localhost"},{"name":"thread","value":"3945-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_monitoring"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"918c35811ba3edb2","reportUrl":"https://mindwm.github.io/mindwm-gitops/94//#testresult/918c35811ba3edb2","status":"passed","time":{"start":1725997128212,"stop":1725997128318,"duration":106}},{"uid":"c556b2c3c74b71c4","reportUrl":"https://mindwm.github.io/mindwm-gitops/93//#testresult/c556b2c3c74b71c4","status":"passed","time":{"start":1725995806369,"stop":1725995806440,"duration":71}}]},"tags":["dependency(name='deployment', depends=['ns'], scope='session')"]},"source":"da48acb5e2d5df82.json","parameterValues":[]}