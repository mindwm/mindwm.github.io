{"uid":"30050cfec3c043b4","name":"test_scenarios[file:features/0_0_mindwm_lifecycle.feature-Mindwm Lifecycle Management-Deploy Mindwm Cluster and Applications]","fullName":"features.0_0_mindwm_lifecycle#test_scenarios","historyId":"3acd08bbde377d1d0725598174140c1b","time":{"start":1726916245393,"stop":1726916931991,"duration":686598},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"steps_left","time":{"start":1726916245393,"stop":1726916245393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726916245394,"stop":1726916245394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1726916245394,"stop":1726916245394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726916245394,"stop":1726916245394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1726916245394,"stop":1726916245394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1726916245394,"stop":1726916245394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1726916245399,"stop":1726916245399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1726916308367,"stop":1726916308367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1726916308367,"stop":1726916308367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1726916308367,"stop":1726916308371,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"passed","steps":[{"name":"make cluster","time":{"start":1726916245410,"stop":1726916245410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Kubernetes node 'localhost' is True","time":{"start":1726916308386,"stop":1726916308386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"make argocd","time":{"start":1726916308391,"stop":1726916308391,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Helm release 'argocd' deployed in argocd","time":{"start":1726916386498,"stop":1726916386498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"make argocd_app","time":{"start":1726916386503,"stop":1726916386503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'mindwm-gitops' exists","time":{"start":1726916397998,"stop":1726916397999,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"make argocd_app_sync_async","time":{"start":1726916398005,"stop":1726916398005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'mindwm-gitops' is Missing","time":{"start":1726916455305,"stop":1726916455305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"make argocd_app_async_wait","time":{"start":1726916455311,"stop":1726916455311,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'cert-manager' is Healthy","time":{"start":1726916930219,"stop":1726916930219,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'cert-manager' is healty","time":{"start":1726916930219,"stop":1726916930219,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'crossplane' is Healthy","time":{"start":1726916930229,"stop":1726916930229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'crossplane' is healty","time":{"start":1726916930229,"stop":1726916930229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'flux' is Healthy","time":{"start":1726916930239,"stop":1726916930239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'flux' is healty","time":{"start":1726916930239,"stop":1726916930239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istio-base' is Healthy","time":{"start":1726916930246,"stop":1726916930246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istio-base' is healty","time":{"start":1726916930246,"stop":1726916930246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istio-ingressgateway' is Healthy","time":{"start":1726916930253,"stop":1726916930253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istio-ingressgateway' is healty","time":{"start":1726916930253,"stop":1726916930253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istiod' is Healthy","time":{"start":1726916930261,"stop":1726916930261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'istiod' is healty","time":{"start":1726916930261,"stop":1726916930261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'loki' is Healthy","time":{"start":1726916930268,"stop":1726916930268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'loki' is healty","time":{"start":1726916930268,"stop":1726916930268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'mindwm-gitops' is Healthy","time":{"start":1726916930292,"stop":1726916930292,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'mindwm-gitops' is healty","time":{"start":1726916930292,"stop":1726916930292,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'nats' is Healthy","time":{"start":1726916930299,"stop":1726916930299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'nats' is healty","time":{"start":1726916930299,"stop":1726916930299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'otel-collector' is Healthy","time":{"start":1726916930305,"stop":1726916930305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'otel-collector' is healty","time":{"start":1726916930305,"stop":1726916930305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'promtail' is Healthy","time":{"start":1726916930312,"stop":1726916930312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'promtail' is healty","time":{"start":1726916930312,"stop":1726916930312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'redpanda-operator' is Healthy","time":{"start":1726916930320,"stop":1726916930320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'redpanda-operator' is healty","time":{"start":1726916930320,"stop":1726916930320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'tempo' is Healthy","time":{"start":1726916930326,"stop":1726916930326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'tempo' is healty","time":{"start":1726916930326,"stop":1726916930326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'vm-aio' is Healthy","time":{"start":1726916930341,"stop":1726916930341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'vm-aio' is healty","time":{"start":1726916930341,"stop":1726916930341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'redpanda-operator' is Healthy","time":{"start":1726916930350,"stop":1726916930350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Argocd application 'redpanda-operator' is healty","time":{"start":1726916930350,"stop":1726916930350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"make crossplane_rolebinding_workaround","time":{"start":1726916930355,"stop":1726916930355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Role 'crossplane-admin' exists","time":{"start":1726916931988,"stop":1726916931988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":41,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_0_mindwm_lifecycle.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"lifecycle"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"0_0_mindwm_lifecycle"},{"name":"host","value":"localhost"},{"name":"thread","value":"4140-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.0_0_mindwm_lifecycle"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/0_0_mindwm_lifecycle.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@lifecycle', id='34')], language='en', keyword='Feature', name='Mindwm Lifecycle Management', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1')], id='2'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario', name='Deploy Mindwm Cluster and Applications', description='', steps=[Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')], examples=[], id='33'))]), comments=[Comment(location=Location(line=43, column=1), text='#      | provider-kubernetes-admin      |'), Comment(location=Location(line=44, column=1), text='#     | provider-helm-admin            |'), Comment(location=Location(line=46, column=1), text='#      | jetstream-ch-dispatcher-admin  |')]), uri='file:features/0_0_mindwm_lifecycle.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_0_mindwm_lifecycle.feature', registry={'34': Tag(location=Location(line=1, column=1), name='@lifecycle', id='34'), '2': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1')], id='2'), '0': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), '1': Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1'), '33': Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario', name='Deploy Mindwm Cluster and Applications', description='', steps=[Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')], examples=[], id='33'), '3': Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), '4': Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), '5': Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), '6': Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), '7': Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), '8': Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), '10': Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), '11': Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), '28': Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), '29': Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), '32': Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')}, pickles=[Pickle(id='49', uri='file:features/0_0_mindwm_lifecycle.feature', name='Deploy Mindwm Cluster and Applications', language='en', steps=[PickleStep(argument=None, ast_node_ids=['0'], id='35', type=<Type.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM'), PickleStep(argument=None, ast_node_ids=['1'], id='36', type=<Type.context: 'Context'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory'), PickleStep(argument=None, ast_node_ids=['3'], id='37', type=<Type.action: 'Action'>, text='God executes \"make cluster\"'), PickleStep(argument=None, ast_node_ids=['4'], id='38', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['5'], id='39', type=<Type.action: 'Action'>, text='God executes \"make argocd\"'), PickleStep(argument=None, ast_node_ids=['6'], id='40', type=<Type.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['7'], id='41', type=<Type.action: 'Action'>, text='God executes \"make argocd_app\"'), PickleStep(argument=None, ast_node_ids=['8'], id='42', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['9'], id='43', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"'), PickleStep(argument=None, ast_node_ids=['10'], id='44', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status'), PickleStep(argument=None, ast_node_ids=['11'], id='45', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='ArgoCD Application name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='crossplane')]), PickleTableRow(cells=[PickleTableCell(value='flux')]), PickleTableRow(cells=[PickleTableCell(value='istio-base')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='loki')]), PickleTableRow(cells=[PickleTableCell(value='mindwm-gitops')]), PickleTableRow(cells=[PickleTableCell(value='nats')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector')]), PickleTableRow(cells=[PickleTableCell(value='promtail')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='tempo')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')])])), ast_node_ids=['28'], id='46', type=<Type.outcome: 'Outcome'>, text='all argocd applications are in a healthy state'), PickleStep(argument=None, ast_node_ids=['29'], id='47', type=<Type.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Role name')]), PickleTableRow(cells=[PickleTableCell(value='crossplane-admin')])])), ast_node_ids=['32'], id='48', type=<Type.outcome: 'Outcome'>, text='the following roles should exist:')], tags=[PickleTag(name='@lifecycle', ast_node_id='34')], ast_node_ids=['33'])])"},{"name":"feature_source","value":"Source(uri='file:features/0_0_mindwm_lifecycle.feature', data='@lifecycle\\nFeature: Mindwm Lifecycle Management\\n\\n  Background:\\n    Given an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM\\n    And the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory\\n\\n  Scenario: Deploy Mindwm Cluster and Applications\\n     When God executes \"make cluster\"\\n     Then all nodes in Kubernetes are ready\\n\\n     When God executes \"make argocd\"\\n     Then helm release \"argocd\" is deployed in \"argocd\" namespace\\n\\n     When God executes \"make argocd_app\"\\n     Then the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace\\n\\n    When God executes \"make argocd_app_sync_async\"\\n    Then the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status \\n\\n    When God executes \"make argocd_app_async_wait\"\\n    Then all argocd applications are in a healthy state\\n      | ArgoCD Application name      |\\n      | cert-manager\\t\\t     |\\n      | crossplane\\t\\t     |\\n      | flux\\t\\t\\t     |\\n      | istio-base\\t\\t     |\\n      | istio-ingressgateway\\t     |\\n      | istiod\\t\\t\\t     |\\n      | loki\\t\\t\\t     |\\n      | mindwm-gitops\\t\\t     |\\n      | nats\\t\\t\\t     |\\n      | otel-collector\\t\\t     |\\n      | promtail\\t\\t     |\\n      | redpanda-operator\\t     |\\n      | tempo\\t\\t\\t     |\\n      | vm-aio\\t\\t\\t     |\\n      | redpanda-operator            |\\n\\n   When God executes \"make crossplane_rolebinding_workaround\"\\n   Then the following roles should exist:\\n      | Role name                      |\\n#      | provider-kubernetes-admin      |\\n#     | provider-helm-admin            |\\n      | crossplane-admin               |\\n#      | jetstream-ch-dispatcher-admin  |\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='49', uri='file:features/0_0_mindwm_lifecycle.feature', name='Deploy Mindwm Cluster and Applications', language='en', steps=[PickleStep(argument=None, ast_node_ids=['0'], id='35', type=<Type.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM'), PickleStep(argument=None, ast_node_ids=['1'], id='36', type=<Type.context: 'Context'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory'), PickleStep(argument=None, ast_node_ids=['3'], id='37', type=<Type.action: 'Action'>, text='God executes \"make cluster\"'), PickleStep(argument=None, ast_node_ids=['4'], id='38', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['5'], id='39', type=<Type.action: 'Action'>, text='God executes \"make argocd\"'), PickleStep(argument=None, ast_node_ids=['6'], id='40', type=<Type.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['7'], id='41', type=<Type.action: 'Action'>, text='God executes \"make argocd_app\"'), PickleStep(argument=None, ast_node_ids=['8'], id='42', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['9'], id='43', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"'), PickleStep(argument=None, ast_node_ids=['10'], id='44', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status'), PickleStep(argument=None, ast_node_ids=['11'], id='45', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='ArgoCD Application name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='crossplane')]), PickleTableRow(cells=[PickleTableCell(value='flux')]), PickleTableRow(cells=[PickleTableCell(value='istio-base')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='loki')]), PickleTableRow(cells=[PickleTableCell(value='mindwm-gitops')]), PickleTableRow(cells=[PickleTableCell(value='nats')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector')]), PickleTableRow(cells=[PickleTableCell(value='promtail')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='tempo')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')])])), ast_node_ids=['28'], id='46', type=<Type.outcome: 'Outcome'>, text='all argocd applications are in a healthy state'), PickleStep(argument=None, ast_node_ids=['29'], id='47', type=<Type.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Role name')]), PickleTableRow(cells=[PickleTableCell(value='crossplane-admin')])])), ast_node_ids=['32'], id='48', type=<Type.outcome: 'Outcome'>, text='the following roles should exist:')], tags=[PickleTag(name='@lifecycle', ast_node_id='34')], ast_node_ids=['33'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"9bc0857014b9dce9","reportUrl":"https://mindwm.github.io/mindwm-gitops/151//#testresult/9bc0857014b9dce9","status":"passed","time":{"start":1726915072308,"stop":1726915769343,"duration":697035}},{"uid":"3a99f30947152cd3","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/3a99f30947152cd3","status":"passed","time":{"start":1726906322236,"stop":1726907019804,"duration":697568}},{"uid":"56c3e8b56797a044","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/56c3e8b56797a044","status":"passed","time":{"start":1726874919700,"stop":1726875854113,"duration":934413}},{"uid":"39d4ac9878ecb6ac","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/39d4ac9878ecb6ac","status":"passed","time":{"start":1726873804000,"stop":1726874438693,"duration":634693}},{"uid":"df88e8a0c7abcdab","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/df88e8a0c7abcdab","status":"passed","time":{"start":1726871849114,"stop":1726872486689,"duration":637575}},{"uid":"54ce6c58fea229fc","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/54ce6c58fea229fc","status":"passed","time":{"start":1726870000534,"stop":1726870821929,"duration":821395}},{"uid":"74713283c96518df","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/74713283c96518df","status":"passed","time":{"start":1726862496048,"stop":1726863170479,"duration":674431}},{"uid":"cf00dad8bfbcf1a6","reportUrl":"https://mindwm.github.io/mindwm-gitops/149//#testresult/cf00dad8bfbcf1a6","status":"passed","time":{"start":1726858184731,"stop":1726859112324,"duration":927593}},{"uid":"99f273b38fc16ca4","reportUrl":"https://mindwm.github.io/mindwm-gitops/148//#testresult/99f273b38fc16ca4","status":"passed","time":{"start":1726856845787,"stop":1726857574864,"duration":729077}}]},"tags":["lifecycle","pytest_bdd_scenario","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_0_mindwm_lifecycle.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","namespace(create=False, name='default')"]},"source":"30050cfec3c043b4.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/0_0_mindwm_lifecycle.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@lifecycle', id='34')], language='en', keyword='Feature', name='Mindwm Lifecycle Management', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1')], id='2'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario', name='Deploy Mindwm Cluster and Applications', description='', steps=[Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')], examples=[], id='33'))]), comments=[Comment(location=Location(line=43, column=1), text='#      | provider-kubernetes-admin      |'), Comment(location=Location(line=44, column=1), text='#     | provider-helm-admin            |'), Comment(location=Location(line=46, column=1), text='#      | jetstream-ch-dispatcher-admin  |')]), uri='file:features/0_0_mindwm_lifecycle.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_0_mindwm_lifecycle.feature', registry={'34': Tag(location=Location(line=1, column=1), name='@lifecycle', id='34'), '2': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1')], id='2'), '0': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM', doc_string=None, data_table=None, id='0'), '1': Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory', doc_string=None, data_table=None, id='1'), '33': Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario', name='Deploy Mindwm Cluster and Applications', description='', steps=[Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')], examples=[], id='33'), '3': Step(location=Location(line=9, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make cluster\"', doc_string=None, data_table=None, id='3'), '4': Step(location=Location(line=10, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='4'), '5': Step(location=Location(line=12, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd\"', doc_string=None, data_table=None, id='5'), '6': Step(location=Location(line=13, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace', doc_string=None, data_table=None, id='6'), '7': Step(location=Location(line=15, column=6), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app\"', doc_string=None, data_table=None, id='7'), '8': Step(location=Location(line=16, column=6), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=18, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"', doc_string=None, data_table=None, id='9'), '10': Step(location=Location(line=19, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status', doc_string=None, data_table=None, id='10'), '11': Step(location=Location(line=21, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"', doc_string=None, data_table=None, id='11'), '28': Step(location=Location(line=22, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all argocd applications are in a healthy state', doc_string=None, data_table=DataTable(location=Location(line=23, column=7), rows=[TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='ArgoCD Application name')], id='12'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='cert-manager')], id='13'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='crossplane')], id='14'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='flux')], id='15'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='istio-base')], id='16'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='istio-ingressgateway')], id='17'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='istiod')], id='18'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='loki')], id='19'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mindwm-gitops')], id='20'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='nats')], id='21'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='otel-collector')], id='22'), TableRow(location=Location(line=34, column=7), cells=[TableCell(location=Location(line=34, column=9), value='promtail')], id='23'), TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='redpanda-operator')], id='24'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='tempo')], id='25'), TableRow(location=Location(line=37, column=7), cells=[TableCell(location=Location(line=37, column=9), value='vm-aio')], id='26'), TableRow(location=Location(line=38, column=7), cells=[TableCell(location=Location(line=38, column=9), value='redpanda-operator')], id='27')]), id='28'), '29': Step(location=Location(line=40, column=4), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"', doc_string=None, data_table=None, id='29'), '32': Step(location=Location(line=41, column=4), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the following roles should exist:', doc_string=None, data_table=DataTable(location=Location(line=42, column=7), rows=[TableRow(location=Location(line=42, column=7), cells=[TableCell(location=Location(line=42, column=9), value='Role name')], id='30'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='crossplane-admin')], id='31')]), id='32')}, pickles=[Pickle(id='49', uri='file:features/0_0_mindwm_lifecycle.feature', name='Deploy Mindwm Cluster and Applications', language='en', steps=[PickleStep(argument=None, ast_node_ids=['0'], id='35', type=<Type.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM'), PickleStep(argument=None, ast_node_ids=['1'], id='36', type=<Type.context: 'Context'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory'), PickleStep(argument=None, ast_node_ids=['3'], id='37', type=<Type.action: 'Action'>, text='God executes \"make cluster\"'), PickleStep(argument=None, ast_node_ids=['4'], id='38', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['5'], id='39', type=<Type.action: 'Action'>, text='God executes \"make argocd\"'), PickleStep(argument=None, ast_node_ids=['6'], id='40', type=<Type.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['7'], id='41', type=<Type.action: 'Action'>, text='God executes \"make argocd_app\"'), PickleStep(argument=None, ast_node_ids=['8'], id='42', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['9'], id='43', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"'), PickleStep(argument=None, ast_node_ids=['10'], id='44', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status'), PickleStep(argument=None, ast_node_ids=['11'], id='45', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='ArgoCD Application name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='crossplane')]), PickleTableRow(cells=[PickleTableCell(value='flux')]), PickleTableRow(cells=[PickleTableCell(value='istio-base')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='loki')]), PickleTableRow(cells=[PickleTableCell(value='mindwm-gitops')]), PickleTableRow(cells=[PickleTableCell(value='nats')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector')]), PickleTableRow(cells=[PickleTableCell(value='promtail')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='tempo')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')])])), ast_node_ids=['28'], id='46', type=<Type.outcome: 'Outcome'>, text='all argocd applications are in a healthy state'), PickleStep(argument=None, ast_node_ids=['29'], id='47', type=<Type.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Role name')]), PickleTableRow(cells=[PickleTableCell(value='crossplane-admin')])])), ast_node_ids=['32'], id='48', type=<Type.outcome: 'Outcome'>, text='the following roles should exist:')], tags=[PickleTag(name='@lifecycle', ast_node_id='34')], ast_node_ids=['33'])])","Source(uri='file:features/0_0_mindwm_lifecycle.feature', data='@lifecycle\\nFeature: Mindwm Lifecycle Management\\n\\n  Background:\\n    Given an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM\\n    And the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory\\n\\n  Scenario: Deploy Mindwm Cluster and Applications\\n     When God executes \"make cluster\"\\n     Then all nodes in Kubernetes are ready\\n\\n     When God executes \"make argocd\"\\n     Then helm release \"argocd\" is deployed in \"argocd\" namespace\\n\\n     When God executes \"make argocd_app\"\\n     Then the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace\\n\\n    When God executes \"make argocd_app_sync_async\"\\n    Then the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status \\n\\n    When God executes \"make argocd_app_async_wait\"\\n    Then all argocd applications are in a healthy state\\n      | ArgoCD Application name      |\\n      | cert-manager\\t\\t     |\\n      | crossplane\\t\\t     |\\n      | flux\\t\\t\\t     |\\n      | istio-base\\t\\t     |\\n      | istio-ingressgateway\\t     |\\n      | istiod\\t\\t\\t     |\\n      | loki\\t\\t\\t     |\\n      | mindwm-gitops\\t\\t     |\\n      | nats\\t\\t\\t     |\\n      | otel-collector\\t\\t     |\\n      | promtail\\t\\t     |\\n      | redpanda-operator\\t     |\\n      | tempo\\t\\t\\t     |\\n      | vm-aio\\t\\t\\t     |\\n      | redpanda-operator            |\\n\\n   When God executes \"make crossplane_rolebinding_workaround\"\\n   Then the following roles should exist:\\n      | Role name                      |\\n#      | provider-kubernetes-admin      |\\n#     | provider-helm-admin            |\\n      | crossplane-admin               |\\n#      | jetstream-ch-dispatcher-admin  |\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='49', uri='file:features/0_0_mindwm_lifecycle.feature', name='Deploy Mindwm Cluster and Applications', language='en', steps=[PickleStep(argument=None, ast_node_ids=['0'], id='35', type=<Type.context: 'Context'>, text='an Ubuntu 24.04 system with 6 CPUs and 16 GB of RAM'), PickleStep(argument=None, ast_node_ids=['1'], id='36', type=<Type.context: 'Context'>, text='the mindwm-gitops repository is cloned into the \"~/mindwm-gitops\" directory'), PickleStep(argument=None, ast_node_ids=['3'], id='37', type=<Type.action: 'Action'>, text='God executes \"make cluster\"'), PickleStep(argument=None, ast_node_ids=['4'], id='38', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['5'], id='39', type=<Type.action: 'Action'>, text='God executes \"make argocd\"'), PickleStep(argument=None, ast_node_ids=['6'], id='40', type=<Type.outcome: 'Outcome'>, text='helm release \"argocd\" is deployed in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['7'], id='41', type=<Type.action: 'Action'>, text='God executes \"make argocd_app\"'), PickleStep(argument=None, ast_node_ids=['8'], id='42', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application appears in \"argocd\" namespace'), PickleStep(argument=None, ast_node_ids=['9'], id='43', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_sync_async\"'), PickleStep(argument=None, ast_node_ids=['10'], id='44', type=<Type.outcome: 'Outcome'>, text='the argocd \"mindwm-gitops\" application is argocd namespace in a progressing status'), PickleStep(argument=None, ast_node_ids=['11'], id='45', type=<Type.action: 'Action'>, text='God executes \"make argocd_app_async_wait\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='ArgoCD Application name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='crossplane')]), PickleTableRow(cells=[PickleTableCell(value='flux')]), PickleTableRow(cells=[PickleTableCell(value='istio-base')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='loki')]), PickleTableRow(cells=[PickleTableCell(value='mindwm-gitops')]), PickleTableRow(cells=[PickleTableCell(value='nats')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector')]), PickleTableRow(cells=[PickleTableCell(value='promtail')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='tempo')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')])])), ast_node_ids=['28'], id='46', type=<Type.outcome: 'Outcome'>, text='all argocd applications are in a healthy state'), PickleStep(argument=None, ast_node_ids=['29'], id='47', type=<Type.action: 'Action'>, text='God executes \"make crossplane_rolebinding_workaround\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Role name')]), PickleTableRow(cells=[PickleTableCell(value='crossplane-admin')])])), ast_node_ids=['32'], id='48', type=<Type.outcome: 'Outcome'>, text='the following roles should exist:')], tags=[PickleTag(name='@lifecycle', ast_node_id='34')], ast_node_ids=['33'])"]}