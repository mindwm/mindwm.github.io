{"uid":"547d7a74f2852c38","name":"test_scenarios[file:features/mindwm_crd.feature-MindWM Custom Resource Definition-Create Host]","fullName":"features.mindwm_crd#test_scenarios","historyId":"846724b43025b2fe30ca0886c9f467f9","time":{"start":1726516603350,"stop":1726516614412,"duration":11062},"status":"failed","statusMessage":"AssertionError: Host laptop is not ready","statusTrace":"self = <pytest_bdd.runner.ScenarioRunner object at 0x7a5d3d9db830>\nitem = <Function test_scenarios[file:features/mindwm_crd.feature-MindWM Custom Resource Definition-Create Host]>\n\n    def pytest_runtest_call(self, item: Item):\n        if \"pytest_bdd_scenario\" in list(map(attrgetter(\"name\"), item.iter_markers())):\n            self.request = item._request\n            self.feature = self.request.getfixturevalue(\"feature\")\n            self.scenario = self.request.getfixturevalue(\"scenario\")\n            self.plugin_manager = self.request.config.hook\n            self.plugin_manager.pytest_bdd_before_scenario(\n                request=self.request, feature=self.feature, scenario=self.scenario\n            )\n            try:\n>               self.plugin_manager.pytest_bdd_run_scenario(\n                    request=self.request,\n                    feature=self.feature,\n                    scenario=self.scenario,\n                )\n\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:59: in pytest_bdd_run_scenario\n    return step_dispatcher(steps)\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:69: in dispatcher\n    self.plugin_manager.pytest_bdd_run_step(\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:128: in pytest_bdd_run_step\n    step_result = step_caller()\nconftest.py:82: in mindwm_host_validate\n    host.validate()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = {'apiVersion': 'mindwm.io/v1beta1', 'kind': 'Host', 'metadata': {'creationTimestamp': '2024-09-16T19:56:43Z', 'generat...-770e-4506-a4ec-8800da916ed0'}, 'spec': {'compositeDeletePolicy': 'Background', 'name': 'laptop', 'username': 'alice'}}\n\n    def validate(self):\n        try:\n            self.wait_for_ready()\n        except TimeoutError as e:\n            pass\n    \n        status = self.status()\n        for condition in status.get('conditions'):\n            if condition.get('type') == 'Ready':\n                ready_condition = condition\n            if condition.get('type') == 'Synced':\n                synced_condition = condition\n    \n        is_ready = ready_condition and ready_condition.get('status') == 'True'\n        is_synced = synced_condition and synced_condition.get('status') == 'True'\n        assert(is_synced), f\"Host {self.name} is not synced\"\n>       assert(is_ready), f\"Host {self.name} is not ready\"\nE       AssertionError: Host laptop is not ready\n\ncustom_objects/host.py:79: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1726516591194,"stop":1726516591194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1726516603350,"stop":1726516603350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1726516603350,"stop":1726516603350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726516603350,"stop":1726516603350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726516603350,"stop":1726516603350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1726516603351,"stop":1726516603351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1726516603351,"stop":1726516603351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1726516603351,"stop":1726516603351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1726516603351,"stop":1726516603354,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1726516603365,"stop":1726516603365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"crd"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"mindwm_crd"},{"name":"host","value":"localhost"},{"name":"thread","value":"41853-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.mindwm_crd"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/mindwm_crd.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd', id='17')], language='en', keyword='Feature', name='MindWM Custom Resource Definition', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6')], id='7'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=11, column=3), tags=[], keyword='Scenario', name='Create User', description='', steps=[Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12')], examples=[], id='13')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=15, column=3), tags=[], keyword='Scenario', name='Create Host', description='', steps=[Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')], examples=[], id='16'))]), comments=[]), uri='file:features/mindwm_crd.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature', registry={'17': Tag(location=Location(line=1, column=1), name='@crd', id='17'), '7': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6')], id='7'), '6': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6'), '10': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'), '8': Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9'), '13': Scenario(location=Location(line=11, column=3), tags=[], keyword='Scenario', name='Create User', description='', steps=[Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12')], examples=[], id='13'), '11': Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), '12': Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12'), '16': Scenario(location=Location(line=15, column=3), tags=[], keyword='Scenario', name='Create Host', description='', steps=[Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')], examples=[], id='16'), '14': Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), '15': Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')}, pickles=[Pickle(id='21', uri='file:features/mindwm_crd.feature', name='Create Context', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='18', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='19', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"'), PickleStep(argument=None, ast_node_ids=['9'], id='20', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['10']), Pickle(id='25', uri='file:features/mindwm_crd.feature', name='Create User', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='22', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['11'], id='23', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"'), PickleStep(argument=None, ast_node_ids=['12'], id='24', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['13']), Pickle(id='29', uri='file:features/mindwm_crd.feature', name='Create Host', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='26', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['14'], id='27', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"'), PickleStep(argument=None, ast_node_ids=['15'], id='28', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['16'])])"},{"name":"feature_source","value":"Source(uri='file:features/mindwm_crd.feature', data='@crd\\nFeature: MindWM Custom Resource Definition\\n\\n  Background:\\n    Given a MindWM environment\\n    \\n  Scenario: Create Context \\n    When God creates a MindWM context with the name \"xxx3\"\\n    Then the context should be ready and operable\\n\\n  Scenario: Create User \\n    When God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"\\n    Then the user resource should be ready and operable\\n\\n  Scenario: Create Host\\n    When God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"\\n    Then the host resource should be ready and operable\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='29', uri='file:features/mindwm_crd.feature', name='Create Host', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='26', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['14'], id='27', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"'), PickleStep(argument=None, ast_node_ids=['15'], id='28', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['16'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"9181e88c3bab3170","reportUrl":"https://mindwm.github.io/mindwm-gitops/114//#testresult/9181e88c3bab3170","status":"passed","time":{"start":1726515249947,"stop":1726515261021,"duration":11074}}]},"tags":["pytest_bdd_scenario","crd","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","namespace(create=False, name='default')"]},"source":"547d7a74f2852c38.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/mindwm_crd.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd', id='17')], language='en', keyword='Feature', name='MindWM Custom Resource Definition', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6')], id='7'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=11, column=3), tags=[], keyword='Scenario', name='Create User', description='', steps=[Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12')], examples=[], id='13')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=15, column=3), tags=[], keyword='Scenario', name='Create Host', description='', steps=[Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')], examples=[], id='16'))]), comments=[]), uri='file:features/mindwm_crd.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature', registry={'17': Tag(location=Location(line=1, column=1), name='@crd', id='17'), '7': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6')], id='7'), '6': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='6'), '10': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Create Context', description='', steps=[Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'), '8': Step(location=Location(line=8, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=9, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='9'), '13': Scenario(location=Location(line=11, column=3), tags=[], keyword='Scenario', name='Create User', description='', steps=[Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12')], examples=[], id='13'), '11': Step(location=Location(line=12, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"', doc_string=None, data_table=None, id='11'), '12': Step(location=Location(line=13, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='12'), '16': Scenario(location=Location(line=15, column=3), tags=[], keyword='Scenario', name='Create Host', description='', steps=[Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')], examples=[], id='16'), '14': Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"', doc_string=None, data_table=None, id='14'), '15': Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='15')}, pickles=[Pickle(id='21', uri='file:features/mindwm_crd.feature', name='Create Context', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='18', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='19', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"xxx3\"'), PickleStep(argument=None, ast_node_ids=['9'], id='20', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['10']), Pickle(id='25', uri='file:features/mindwm_crd.feature', name='Create User', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='22', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['11'], id='23', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"'), PickleStep(argument=None, ast_node_ids=['12'], id='24', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['13']), Pickle(id='29', uri='file:features/mindwm_crd.feature', name='Create Host', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='26', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['14'], id='27', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"'), PickleStep(argument=None, ast_node_ids=['15'], id='28', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['16'])])","Source(uri='file:features/mindwm_crd.feature', data='@crd\\nFeature: MindWM Custom Resource Definition\\n\\n  Background:\\n    Given a MindWM environment\\n    \\n  Scenario: Create Context \\n    When God creates a MindWM context with the name \"xxx3\"\\n    Then the context should be ready and operable\\n\\n  Scenario: Create User \\n    When God creates a MindWM user resource with the name \"alice\" and connects it to the context \"xxx3\"\\n    Then the user resource should be ready and operable\\n\\n  Scenario: Create Host\\n    When God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"\\n    Then the host resource should be ready and operable\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='29', uri='file:features/mindwm_crd.feature', name='Create Host', language='en', steps=[PickleStep(argument=None, ast_node_ids=['6'], id='26', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['14'], id='27', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"laptop\" and connects it to the user \"alice\"'), PickleStep(argument=None, ast_node_ids=['15'], id='28', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='17')], ast_node_ids=['16'])"]}