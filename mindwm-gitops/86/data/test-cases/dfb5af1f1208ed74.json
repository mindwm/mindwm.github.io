{"uid":"dfb5af1f1208ed74","name":"test_argocd_app_async_wait","fullName":"test_infra.TestCInfra#test_argocd_app_async_wait","time":{"start":1725978761582,"stop":1725979275280,"duration":513698},"status":"broken","statusMessage":"BrokenPipeError: [Errno 32] Broken pipe","statusTrace":"self = <test_infra.TestCInfra object at 0x7514de6c0e90>\n\n    @pytest.mark.depends(on=['test_argocd_app_sync_async'])\n    def test_argocd_app_async_wait(self):\n>       self.run_cmd(\"make argocd_app_async_wait\")\n\ntest_infra.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_infra.TestCInfra object at 0x7514de6c0e90>\ncmd = 'make argocd_app_async_wait'\n\n    def run_cmd(self, cmd):\n        try:\n            result = subprocess.run([\"sh\", \"-c\", cmd], check=True, text=True, capture_output=True, cwd=\"../../\")\n>           print(\"Command Output:\", result.stdout)\nE           BrokenPipeError: [Errno 32] Broken pipe\n\ntest_infra.py:10: BrokenPipeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1725978655716,"stop":1725978655716,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"dfb5af1f1208ed74.json","parameterValues":[]}