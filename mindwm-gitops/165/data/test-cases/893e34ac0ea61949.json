{"uid":"893e34ac0ea61949","name":"test_scenarios[file:features/4_mindwm_io_context.feature-MindWM io context function test-io context red[table_rows:[line: 56]]]","fullName":"features.4_mindwm_io_context#test_scenarios","historyId":"b8ef92904f60c0669de1b062ea70503a","time":{"start":1727115161885,"stop":1727115298412,"duration":136527},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1727113891584,"stop":1727113891584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1727115161885,"stop":1727115161885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1727115161885,"stop":1727115161886,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1727115161885,"stop":1727115161885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1727115161886,"stop":1727115161886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1727115161886,"stop":1727115161886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1727115161889,"stop":1727115161889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1727115161889,"stop":1727115161894,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1727115161889,"stop":1727115161889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1727115162114,"stop":1727115162114,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"cloudevent","time":{"start":1727115274771,"stop":1727115274772,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"http_response","time":{"start":1727115274816,"stop":1727115274816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"trace_data","time":{"start":1727115287784,"stop":1727115287784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"passed","steps":[{"name":"Mindwm crd 'xcontexts' is exists","time":{"start":1727115161959,"stop":1727115161960,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xhosts' is exists","time":{"start":1727115162000,"stop":1727115162000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xusers' is exists","time":{"start":1727115162026,"stop":1727115162026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Kubernetes node 'localhost' is True","time":{"start":1727115162098,"stop":1727115162098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Create context 'red'","time":{"start":1727115162133,"stop":1727115162133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Knative service 'context-red'/'iocontext' ready state is Unknown","time":{"start":1727115168466,"stop":1727115168466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Statefulset 'red-neo4j' in 'context-red' is ready","time":{"start":1727115252435,"stop":1727115252435,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Create user 'kitty' with context red","time":{"start":1727115252452,"stop":1727115252452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Host 'tablet' has created","time":{"start":1727115263619,"stop":1727115263619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Wait for deployment 'iocontext-00001-deployment' ready state","time":{"start":1727115287742,"stop":1727115287742,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Node 'User' has property username == kitty in red","time":{"start":1727115298015,"stop":1727115298015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Node 'Host' has property hostname == tablet in red","time":{"start":1727115298215,"stop":1727115298215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Node 'IoDocument' has property input == id in red","time":{"start":1727115298410,"stop":1727115298411,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":13,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/4_mindwm_io_context.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"io_context"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"4_mindwm_io_context"},{"name":"host","value":"localhost"},{"name":"thread","value":"4648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.4_mindwm_io_context"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/4_mindwm_io_context.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@io_context', id='490')], language='en', keyword='Feature', name='MindWM io context function test', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447')], id='448'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='io context <context>', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477')], examples=[Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480')], id='481')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Cleanup <username>@<host> in <context>', description='', steps=[Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485')], examples=[Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488')], id='489'))]), comments=[Comment(location=Location(line=21, column=1), text='    # When God makes graph query in context \"<context>\"'), Comment(location=Location(line=22, column=1), text='    #   \"\"\"'), Comment(location=Location(line=23, column=1), text='    #   MATCH (N) DETACH DELETE N;'), Comment(location=Location(line=24, column=1), text='    #   \"\"\"')]), uri='file:features/4_mindwm_io_context.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/4_mindwm_io_context.feature', registry={'490': Tag(location=Location(line=1, column=1), name='@io_context', id='490'), '448': Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447')], id='448'), '446': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), '447': Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447'), '481': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='io context <context>', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477')], examples=[Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480')], id='481'), '449': Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), '450': Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), '453': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), '454': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), '455': Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), '456': Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), '457': Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), '458': Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), '459': Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), '460': Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), '461': Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), '462': Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), '463': Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), '464': Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), '465': Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), '466': Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), '469': Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), '470': Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), '474': Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), '475': Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), '476': Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), '477': Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477'), '480': Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480'), '478': TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), '479': TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479'), '489': Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Cleanup <username>@<host> in <context>', description='', steps=[Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485')], examples=[Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488')], id='489'), '482': Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), '483': Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), '484': Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), '485': Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485'), '488': Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488'), '486': TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), '487': TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')}, pickles=[Pickle(id='515', uri='file:features/4_mindwm_io_context.feature', name='io context red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='491', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='492', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['449', '479'], id='493', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"red\"'), PickleStep(argument=None, ast_node_ids=['450', '479'], id='494', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')])])), ast_node_ids=['453', '479'], id='495', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['454', '479'], id='496', type=<Type.outcome: 'Outcome'>, text='statefulset \"red-neo4j\" in namespace \"context-red\" is in ready state'), PickleStep(argument=None, ast_node_ids=['455', '479'], id='497', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"kitty\" and connects it to the context \"red\"'), PickleStep(argument=None, ast_node_ids=['456', '479'], id='498', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['457', '479'], id='499', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"tablet\" and connects it to the user \"kitty\"'), PickleStep(argument=None, ast_node_ids=['458', '479'], id='500', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['459', '479'], id='501', type=<Type.action: 'Action'>, text='God creates a new cloudevent'), PickleStep(argument=None, ast_node_ids=['460', '479'], id='502', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-id\" to \"442af213-c860-4535-b639-355f13b2d883\"'), PickleStep(argument=None, ast_node_ids=['461', '479'], id='503', type=<Type.action: 'Action'>, text='sets cloudevent header \"traceparent\" to \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\"'), PickleStep(argument=None, ast_node_ids=['462', '479'], id='504', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-subject\" to \"id\"'), PickleStep(argument=None, ast_node_ids=['463', '479'], id='505', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.kitty.tablet.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"'), PickleStep(argument=None, ast_node_ids=['464', '479'], id='506', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"'), PickleStep(argument=PickleStepArgument(doc_string=PickleDocString(media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}'), data_table=None), ast_node_ids=['465', '479'], id='507', type=<Type.action: 'Action'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-red/context-broker\"'), PickleStep(argument=None, ast_node_ids=['466', '479'], id='508', type=<Type.outcome: 'Outcome'>, text='the response http code should be \"202\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['469', '479'], id='509', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['470', '479'], id='510', type=<Type.outcome: 'Outcome'>, text='the trace with \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\" should appear in TraceQL'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='service name')]), PickleTableRow(cells=[PickleTableCell(value='broker-ingress.knative-eventing')]), PickleTableRow(cells=[PickleTableCell(value='unknown_service')])])), ast_node_ids=['474', '479'], id='511', type=<Type.outcome: 'Outcome'>, text='the trace should contains'), PickleStep(argument=None, ast_node_ids=['475', '479'], id='512', type=<Type.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"kitty\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['476', '479'], id='513', type=<Type.outcome: 'Outcome'>, text='graph have node \"Host\" with property \"hostname\" = \"tablet\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['477', '479'], id='514', type=<Type.outcome: 'Outcome'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['481', '479']), Pickle(id='522', uri='file:features/4_mindwm_io_context.feature', name='Cleanup kitty@tablet in red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='516', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='517', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['482', '487'], id='518', type=<Type.action: 'Action'>, text='God deletes the MindWM host resource \"tablet\"'), PickleStep(argument=None, ast_node_ids=['483', '487'], id='519', type=<Type.outcome: 'Outcome'>, text='the host \"tablet\" should be deleted'), PickleStep(argument=None, ast_node_ids=['484', '487'], id='520', type=<Type.action: 'Action'>, text='God deletes the MindWM user resource \"kitty\"'), PickleStep(argument=None, ast_node_ids=['485', '487'], id='521', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['489', '487'])])"},{"name":"feature_source","value":"Source(uri='file:features/4_mindwm_io_context.feature', data='@io_context\\nFeature: MindWM io context function test\\n  Background:\\n    Given A MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario: io context <context>\\n\\n    When God creates a MindWM context with the name \"<context>\"\\n    Then the context should be ready and operable\\n    Then following knative service is in ready state in \"context-<context>\" namespace\\n      | Knative service name |\\n      | iocontext            |\\n    And statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state\\n\\n    When God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"\\n    Then the user resource should be ready and operable\\n\\n    When God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"\\n    Then the host resource should be ready and operable\\n    # When God makes graph query in context \"<context>\"\\n    #   \"\"\"\\n    #   MATCH (N) DETACH DELETE N;\\n    #   \"\"\"\\n\\n    When God creates a new cloudevent \\n      And sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"\\n      And sets cloudevent header \"traceparent\" to \"<traceparent>\"\\n      And sets cloudevent header \"ce-subject\" to \"id\"\\n      And sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"\\n      And sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"\\n      And sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"\\n        \"\"\"\\n        {\\t\\n          \"input\": \"id\",\\n          \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n          \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n          \"type\": \"org.mindwm.v1.iodocument\"\\n        }\\n        \"\"\"\\n    Then the response http code should be \"202\"\\n    Then following deployments is in ready state in \"context-<context>\" namespace\\n      | Deployment name            |\\n      | iocontext-00001-deployment |\\n    Then the trace with \"<traceparent>\" should appear in TraceQL\\n    And the trace should contains\\n      | service name                    |\\n      | broker-ingress.knative-eventing |\\n      | unknown_service                 |\\n    Then graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"\\n    And graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"\\n    And graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"\\n\\n    Examples:\\n     | context | username   | host      | cloudevent_id                        | traceparent \\t\\t\\t\\t\\t         |\\n     | red     | kitty      | tablet    | 442af213-c860-4535-b639-355f13b2d883 | 00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00 |\\n\\n\\n  Scenario: Cleanup <username>@<host> in <context>\\n    When God deletes the MindWM host resource \"<host>\"\\n    Then the host \"<host>\" should be deleted\\n\\n    When God deletes the MindWM user resource \"<username>\"\\n\\n    When God deletes the MindWM context resource \"<context>\"\\n\\n    Examples:\\n    | context | username | host        | \\n    | red     | kitty    | tablet      |\\n\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='515', uri='file:features/4_mindwm_io_context.feature', name='io context red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='491', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='492', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['449', '479'], id='493', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"red\"'), PickleStep(argument=None, ast_node_ids=['450', '479'], id='494', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')])])), ast_node_ids=['453', '479'], id='495', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['454', '479'], id='496', type=<Type.outcome: 'Outcome'>, text='statefulset \"red-neo4j\" in namespace \"context-red\" is in ready state'), PickleStep(argument=None, ast_node_ids=['455', '479'], id='497', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"kitty\" and connects it to the context \"red\"'), PickleStep(argument=None, ast_node_ids=['456', '479'], id='498', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['457', '479'], id='499', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"tablet\" and connects it to the user \"kitty\"'), PickleStep(argument=None, ast_node_ids=['458', '479'], id='500', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['459', '479'], id='501', type=<Type.action: 'Action'>, text='God creates a new cloudevent'), PickleStep(argument=None, ast_node_ids=['460', '479'], id='502', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-id\" to \"442af213-c860-4535-b639-355f13b2d883\"'), PickleStep(argument=None, ast_node_ids=['461', '479'], id='503', type=<Type.action: 'Action'>, text='sets cloudevent header \"traceparent\" to \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\"'), PickleStep(argument=None, ast_node_ids=['462', '479'], id='504', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-subject\" to \"id\"'), PickleStep(argument=None, ast_node_ids=['463', '479'], id='505', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.kitty.tablet.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"'), PickleStep(argument=None, ast_node_ids=['464', '479'], id='506', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"'), PickleStep(argument=PickleStepArgument(doc_string=PickleDocString(media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}'), data_table=None), ast_node_ids=['465', '479'], id='507', type=<Type.action: 'Action'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-red/context-broker\"'), PickleStep(argument=None, ast_node_ids=['466', '479'], id='508', type=<Type.outcome: 'Outcome'>, text='the response http code should be \"202\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['469', '479'], id='509', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['470', '479'], id='510', type=<Type.outcome: 'Outcome'>, text='the trace with \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\" should appear in TraceQL'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='service name')]), PickleTableRow(cells=[PickleTableCell(value='broker-ingress.knative-eventing')]), PickleTableRow(cells=[PickleTableCell(value='unknown_service')])])), ast_node_ids=['474', '479'], id='511', type=<Type.outcome: 'Outcome'>, text='the trace should contains'), PickleStep(argument=None, ast_node_ids=['475', '479'], id='512', type=<Type.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"kitty\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['476', '479'], id='513', type=<Type.outcome: 'Outcome'>, text='graph have node \"Host\" with property \"hostname\" = \"tablet\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['477', '479'], id='514', type=<Type.outcome: 'Outcome'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['481', '479'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["pytest_bdd_scenario","io_context","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/4_mindwm_io_context.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","namespace(create=False, name='default')"]},"source":"893e34ac0ea61949.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/4_mindwm_io_context.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@io_context', id='490')], language='en', keyword='Feature', name='MindWM io context function test', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447')], id='448'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='io context <context>', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477')], examples=[Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480')], id='481')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Cleanup <username>@<host> in <context>', description='', steps=[Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485')], examples=[Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488')], id='489'))]), comments=[Comment(location=Location(line=21, column=1), text='    # When God makes graph query in context \"<context>\"'), Comment(location=Location(line=22, column=1), text='    #   \"\"\"'), Comment(location=Location(line=23, column=1), text='    #   MATCH (N) DETACH DELETE N;'), Comment(location=Location(line=24, column=1), text='    #   \"\"\"')]), uri='file:features/4_mindwm_io_context.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/4_mindwm_io_context.feature', registry={'490': Tag(location=Location(line=1, column=1), name='@io_context', id='490'), '448': Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447')], id='448'), '446': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='A MindWM environment', doc_string=None, data_table=None, id='446'), '447': Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='447'), '481': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='io context <context>', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477')], examples=[Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480')], id='481'), '449': Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='449'), '450': Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='450'), '453': Step(location=Location(line=11, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Knative service name')], id='451'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='iocontext')], id='452')]), id='453'), '454': Step(location=Location(line=14, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='454'), '455': Step(location=Location(line=16, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"', doc_string=None, data_table=None, id='455'), '456': Step(location=Location(line=17, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the user resource should be ready and operable', doc_string=None, data_table=None, id='456'), '457': Step(location=Location(line=19, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"', doc_string=None, data_table=None, id='457'), '458': Step(location=Location(line=20, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host resource should be ready and operable', doc_string=None, data_table=None, id='458'), '459': Step(location=Location(line=26, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a new cloudevent', doc_string=None, data_table=None, id='459'), '460': Step(location=Location(line=27, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"', doc_string=None, data_table=None, id='460'), '461': Step(location=Location(line=28, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"traceparent\" to \"<traceparent>\"', doc_string=None, data_table=None, id='461'), '462': Step(location=Location(line=29, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-subject\" to \"id\"', doc_string=None, data_table=None, id='462'), '463': Step(location=Location(line=30, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"', doc_string=None, data_table=None, id='463'), '464': Step(location=Location(line=31, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"', doc_string=None, data_table=None, id='464'), '465': Step(location=Location(line=32, column=7), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"', doc_string=DocString(location=Location(line=33, column=9), media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}', delimiter='\"\"\"'), data_table=None, id='465'), '466': Step(location=Location(line=41, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the response http code should be \"202\"', doc_string=None, data_table=None, id='466'), '469': Step(location=Location(line=42, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=43, column=7), rows=[TableRow(location=Location(line=43, column=7), cells=[TableCell(location=Location(line=43, column=9), value='Deployment name')], id='467'), TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='iocontext-00001-deployment')], id='468')]), id='469'), '470': Step(location=Location(line=45, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the trace with \"<traceparent>\" should appear in TraceQL', doc_string=None, data_table=None, id='470'), '474': Step(location=Location(line=46, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the trace should contains', doc_string=None, data_table=DataTable(location=Location(line=47, column=7), rows=[TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='service name')], id='471'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='broker-ingress.knative-eventing')], id='472'), TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='unknown_service')], id='473')]), id='474'), '475': Step(location=Location(line=50, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"', doc_string=None, data_table=None, id='475'), '476': Step(location=Location(line=51, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"', doc_string=None, data_table=None, id='476'), '477': Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"', doc_string=None, data_table=None, id='477'), '480': Examples(location=Location(line=54, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), table_body=[TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479')], id='480'), '478': TableRow(location=Location(line=55, column=6), cells=[TableCell(location=Location(line=55, column=8), value='context'), TableCell(location=Location(line=55, column=18), value='username'), TableCell(location=Location(line=55, column=31), value='host'), TableCell(location=Location(line=55, column=43), value='cloudevent_id'), TableCell(location=Location(line=55, column=82), value='traceparent')], id='478'), '479': TableRow(location=Location(line=56, column=6), cells=[TableCell(location=Location(line=56, column=8), value='red'), TableCell(location=Location(line=56, column=18), value='kitty'), TableCell(location=Location(line=56, column=31), value='tablet'), TableCell(location=Location(line=56, column=43), value='442af213-c860-4535-b639-355f13b2d883'), TableCell(location=Location(line=56, column=82), value='00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00')], id='479'), '489': Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Cleanup <username>@<host> in <context>', description='', steps=[Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485')], examples=[Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488')], id='489'), '482': Step(location=Location(line=60, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM host resource \"<host>\"', doc_string=None, data_table=None, id='482'), '483': Step(location=Location(line=61, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the host \"<host>\" should be deleted', doc_string=None, data_table=None, id='483'), '484': Step(location=Location(line=63, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM user resource \"<username>\"', doc_string=None, data_table=None, id='484'), '485': Step(location=Location(line=65, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God deletes the MindWM context resource \"<context>\"', doc_string=None, data_table=None, id='485'), '488': Examples(location=Location(line=67, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), table_body=[TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')], id='488'), '486': TableRow(location=Location(line=68, column=5), cells=[TableCell(location=Location(line=68, column=7), value='context'), TableCell(location=Location(line=68, column=17), value='username'), TableCell(location=Location(line=68, column=28), value='host')], id='486'), '487': TableRow(location=Location(line=69, column=5), cells=[TableCell(location=Location(line=69, column=7), value='red'), TableCell(location=Location(line=69, column=17), value='kitty'), TableCell(location=Location(line=69, column=28), value='tablet')], id='487')}, pickles=[Pickle(id='515', uri='file:features/4_mindwm_io_context.feature', name='io context red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='491', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='492', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['449', '479'], id='493', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"red\"'), PickleStep(argument=None, ast_node_ids=['450', '479'], id='494', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')])])), ast_node_ids=['453', '479'], id='495', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['454', '479'], id='496', type=<Type.outcome: 'Outcome'>, text='statefulset \"red-neo4j\" in namespace \"context-red\" is in ready state'), PickleStep(argument=None, ast_node_ids=['455', '479'], id='497', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"kitty\" and connects it to the context \"red\"'), PickleStep(argument=None, ast_node_ids=['456', '479'], id='498', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['457', '479'], id='499', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"tablet\" and connects it to the user \"kitty\"'), PickleStep(argument=None, ast_node_ids=['458', '479'], id='500', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['459', '479'], id='501', type=<Type.action: 'Action'>, text='God creates a new cloudevent'), PickleStep(argument=None, ast_node_ids=['460', '479'], id='502', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-id\" to \"442af213-c860-4535-b639-355f13b2d883\"'), PickleStep(argument=None, ast_node_ids=['461', '479'], id='503', type=<Type.action: 'Action'>, text='sets cloudevent header \"traceparent\" to \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\"'), PickleStep(argument=None, ast_node_ids=['462', '479'], id='504', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-subject\" to \"id\"'), PickleStep(argument=None, ast_node_ids=['463', '479'], id='505', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.kitty.tablet.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"'), PickleStep(argument=None, ast_node_ids=['464', '479'], id='506', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"'), PickleStep(argument=PickleStepArgument(doc_string=PickleDocString(media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}'), data_table=None), ast_node_ids=['465', '479'], id='507', type=<Type.action: 'Action'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-red/context-broker\"'), PickleStep(argument=None, ast_node_ids=['466', '479'], id='508', type=<Type.outcome: 'Outcome'>, text='the response http code should be \"202\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['469', '479'], id='509', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['470', '479'], id='510', type=<Type.outcome: 'Outcome'>, text='the trace with \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\" should appear in TraceQL'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='service name')]), PickleTableRow(cells=[PickleTableCell(value='broker-ingress.knative-eventing')]), PickleTableRow(cells=[PickleTableCell(value='unknown_service')])])), ast_node_ids=['474', '479'], id='511', type=<Type.outcome: 'Outcome'>, text='the trace should contains'), PickleStep(argument=None, ast_node_ids=['475', '479'], id='512', type=<Type.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"kitty\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['476', '479'], id='513', type=<Type.outcome: 'Outcome'>, text='graph have node \"Host\" with property \"hostname\" = \"tablet\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['477', '479'], id='514', type=<Type.outcome: 'Outcome'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['481', '479']), Pickle(id='522', uri='file:features/4_mindwm_io_context.feature', name='Cleanup kitty@tablet in red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='516', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='517', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['482', '487'], id='518', type=<Type.action: 'Action'>, text='God deletes the MindWM host resource \"tablet\"'), PickleStep(argument=None, ast_node_ids=['483', '487'], id='519', type=<Type.outcome: 'Outcome'>, text='the host \"tablet\" should be deleted'), PickleStep(argument=None, ast_node_ids=['484', '487'], id='520', type=<Type.action: 'Action'>, text='God deletes the MindWM user resource \"kitty\"'), PickleStep(argument=None, ast_node_ids=['485', '487'], id='521', type=<Type.action: 'Action'>, text='God deletes the MindWM context resource \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['489', '487'])])","Source(uri='file:features/4_mindwm_io_context.feature', data='@io_context\\nFeature: MindWM io context function test\\n  Background:\\n    Given A MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario: io context <context>\\n\\n    When God creates a MindWM context with the name \"<context>\"\\n    Then the context should be ready and operable\\n    Then following knative service is in ready state in \"context-<context>\" namespace\\n      | Knative service name |\\n      | iocontext            |\\n    And statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state\\n\\n    When God creates a MindWM user resource with the name \"<username>\" and connects it to the context \"<context>\"\\n    Then the user resource should be ready and operable\\n\\n    When God creates a MindWM host resource with the name \"<host>\" and connects it to the user \"<username>\"\\n    Then the host resource should be ready and operable\\n    # When God makes graph query in context \"<context>\"\\n    #   \"\"\"\\n    #   MATCH (N) DETACH DELETE N;\\n    #   \"\"\"\\n\\n    When God creates a new cloudevent \\n      And sets cloudevent header \"ce-id\" to \"<cloudevent_id>\"\\n      And sets cloudevent header \"traceparent\" to \"<traceparent>\"\\n      And sets cloudevent header \"ce-subject\" to \"id\"\\n      And sets cloudevent header \"ce-source\" to \"org.mindwm.<username>.<host>.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"\\n      And sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"\\n      And sends cloudevent to \"broker-ingress.knative-eventing/context-<context>/context-broker\"\\n        \"\"\"\\n        {\\t\\n          \"input\": \"id\",\\n          \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n          \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n          \"type\": \"org.mindwm.v1.iodocument\"\\n        }\\n        \"\"\"\\n    Then the response http code should be \"202\"\\n    Then following deployments is in ready state in \"context-<context>\" namespace\\n      | Deployment name            |\\n      | iocontext-00001-deployment |\\n    Then the trace with \"<traceparent>\" should appear in TraceQL\\n    And the trace should contains\\n      | service name                    |\\n      | broker-ingress.knative-eventing |\\n      | unknown_service                 |\\n    Then graph have node \"User\" with property \"username\" = \"<username>\" in context \"<context>\"\\n    And graph have node \"Host\" with property \"hostname\" = \"<host>\" in context \"<context>\"\\n    And graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"<context>\"\\n\\n    Examples:\\n     | context | username   | host      | cloudevent_id                        | traceparent \\t\\t\\t\\t\\t         |\\n     | red     | kitty      | tablet    | 442af213-c860-4535-b639-355f13b2d883 | 00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00 |\\n\\n\\n  Scenario: Cleanup <username>@<host> in <context>\\n    When God deletes the MindWM host resource \"<host>\"\\n    Then the host \"<host>\" should be deleted\\n\\n    When God deletes the MindWM user resource \"<username>\"\\n\\n    When God deletes the MindWM context resource \"<context>\"\\n\\n    Examples:\\n    | context | username | host        | \\n    | red     | kitty    | tablet      |\\n\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='515', uri='file:features/4_mindwm_io_context.feature', name='io context red', language='en', steps=[PickleStep(argument=None, ast_node_ids=['446'], id='491', type=<Type.context: 'Context'>, text='A MindWM environment'), PickleStep(argument=None, ast_node_ids=['447'], id='492', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['449', '479'], id='493', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"red\"'), PickleStep(argument=None, ast_node_ids=['450', '479'], id='494', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')])])), ast_node_ids=['453', '479'], id='495', type=<Type.outcome: 'Outcome'>, text='following knative service is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['454', '479'], id='496', type=<Type.outcome: 'Outcome'>, text='statefulset \"red-neo4j\" in namespace \"context-red\" is in ready state'), PickleStep(argument=None, ast_node_ids=['455', '479'], id='497', type=<Type.action: 'Action'>, text='God creates a MindWM user resource with the name \"kitty\" and connects it to the context \"red\"'), PickleStep(argument=None, ast_node_ids=['456', '479'], id='498', type=<Type.outcome: 'Outcome'>, text='the user resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['457', '479'], id='499', type=<Type.action: 'Action'>, text='God creates a MindWM host resource with the name \"tablet\" and connects it to the user \"kitty\"'), PickleStep(argument=None, ast_node_ids=['458', '479'], id='500', type=<Type.outcome: 'Outcome'>, text='the host resource should be ready and operable'), PickleStep(argument=None, ast_node_ids=['459', '479'], id='501', type=<Type.action: 'Action'>, text='God creates a new cloudevent'), PickleStep(argument=None, ast_node_ids=['460', '479'], id='502', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-id\" to \"442af213-c860-4535-b639-355f13b2d883\"'), PickleStep(argument=None, ast_node_ids=['461', '479'], id='503', type=<Type.action: 'Action'>, text='sets cloudevent header \"traceparent\" to \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\"'), PickleStep(argument=None, ast_node_ids=['462', '479'], id='504', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-subject\" to \"id\"'), PickleStep(argument=None, ast_node_ids=['463', '479'], id='505', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-source\" to \"org.mindwm.kitty.tablet.L3RtcC90bXV4LTEwMDAvZGVmYXVsdA==.09fb195c-c419-6d62-15e0-51b6ee990922.23.36.iodocument\"'), PickleStep(argument=None, ast_node_ids=['464', '479'], id='506', type=<Type.action: 'Action'>, text='sets cloudevent header \"ce-type\" to \"org.mindwm.v1.iodocument\"'), PickleStep(argument=PickleStepArgument(doc_string=PickleDocString(media_type=None, content='{\\t\\n  \"input\": \"id\",\\n  \"output\": \"uid=1000(pion) gid=1000(pion) groups=1000(pion),4(adm),100(users),112(tmux),988(docker)\",\\n  \"ps1\": \"pion@mindwm-stg1:~/work/dev/mindwm-manager$\",\\n  \"type\": \"org.mindwm.v1.iodocument\"\\n}'), data_table=None), ast_node_ids=['465', '479'], id='507', type=<Type.action: 'Action'>, text='sends cloudevent to \"broker-ingress.knative-eventing/context-red/context-broker\"'), PickleStep(argument=None, ast_node_ids=['466', '479'], id='508', type=<Type.outcome: 'Outcome'>, text='the response http code should be \"202\"'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['469', '479'], id='509', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"context-red\" namespace'), PickleStep(argument=None, ast_node_ids=['470', '479'], id='510', type=<Type.outcome: 'Outcome'>, text='the trace with \"00-7df92f3577b34da6a3ce930d0e0e4734-00f064aa0ba902b8-00\" should appear in TraceQL'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='service name')]), PickleTableRow(cells=[PickleTableCell(value='broker-ingress.knative-eventing')]), PickleTableRow(cells=[PickleTableCell(value='unknown_service')])])), ast_node_ids=['474', '479'], id='511', type=<Type.outcome: 'Outcome'>, text='the trace should contains'), PickleStep(argument=None, ast_node_ids=['475', '479'], id='512', type=<Type.outcome: 'Outcome'>, text='graph have node \"User\" with property \"username\" = \"kitty\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['476', '479'], id='513', type=<Type.outcome: 'Outcome'>, text='graph have node \"Host\" with property \"hostname\" = \"tablet\" in context \"red\"'), PickleStep(argument=None, ast_node_ids=['477', '479'], id='514', type=<Type.outcome: 'Outcome'>, text='graph have node \"IoDocument\" with property \"input\" = \"id\" in context \"red\"')], tags=[PickleTag(name='@io_context', ast_node_id='490')], ast_node_ids=['481', '479'])"]}