{"uid":"232ab72d802a57ab","name":"test_scenarios[file:features/0_1_mindwm_eda.feature-Mindwm event driven architecture-Redpanda]","fullName":"features.0_1_mindwm_eda#test_scenarios","historyId":"11ec77f1921be427fb68a51618d94f8d","time":{"start":1726907025547,"stop":1726907205817,"duration":180270},"status":"broken","statusMessage":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","statusTrace":"self = <pytest_bdd.runner.ScenarioRunner object at 0x732439675280>\nitem = <Function test_scenarios[file:features/0_1_mindwm_eda.feature-Mindwm event driven architecture-Redpanda]>\n\n    def pytest_runtest_call(self, item: Item):\n        if \"pytest_bdd_scenario\" in list(map(attrgetter(\"name\"), item.iter_markers())):\n            self.request = item._request\n            self.feature = self.request.getfixturevalue(\"feature\")\n            self.scenario = self.request.getfixturevalue(\"scenario\")\n            self.plugin_manager = self.request.config.hook\n            self.plugin_manager.pytest_bdd_before_scenario(\n                request=self.request, feature=self.feature, scenario=self.scenario\n            )\n            try:\n>               self.plugin_manager.pytest_bdd_run_scenario(\n                    request=self.request,\n                    feature=self.feature,\n                    scenario=self.scenario,\n                )\n\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:59: in pytest_bdd_run_scenario\n    return step_dispatcher(steps)\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:69: in dispatcher\n    self.plugin_manager.pytest_bdd_run_step(\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:128: in pytest_bdd_run_step\n    step_result = step_caller()\nconftest.py:436: in deployment_ready\n    deployment = utils.deployment_wait_for(kube, deployment_name, namespace)\nutils.py:286: in deployment_wait_for\n    kubetest_utils.wait_for_condition(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncondition = <Condition (name: deployment neo4j-cdc-console exists, met: False)>\ntimeout = 180, interval = 5, fail_on_api_error = True\n\n    def wait_for_condition(\n        condition: Condition,\n        timeout: int = None,\n        interval: Union[int, float] = 1,\n        fail_on_api_error: bool = True,\n    ) -> None:\n        \"\"\"Wait for a condition to be met.\n    \n        Args:\n            condition: The Condition to wait for.\n            timeout: The maximum time to wait, in seconds, for the condition to be met.\n                If unspecified, this function will wait indefinitely. If specified and\n                the timeout is met or exceeded, a TimeoutError will be raised.\n            interval: The time, in seconds, to wait before re-checking the condition.\n            fail_on_api_error: Fail the condition checks if a Kubernetes API error is\n                incurred. An API error can be raised for a number of reasons, including\n                a Pod being restarted and temporarily unavailable. Disabling this will\n                cause those errors to be ignored, allowing the check to continue until\n                timeout or resolution. (default: True).\n    \n        Raises:\n            TimeoutError: The specified timeout was exceeded.\n        \"\"\"\n        log.info(f\"waiting for condition: {condition}\")\n    \n        # define the maximum time to wait. once this is met, we should\n        # stop waiting.\n        max_time = None\n        if timeout is not None:\n            max_time = time.time() + timeout\n    \n        # start the wait block\n        start = time.time()\n        while True:\n            if max_time and time.time() >= max_time:\n>               raise TimeoutError(\n                    f\"timed out ({timeout}s) while waiting for condition {condition}\"\n                )\nE               TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>\n\n.venv/lib/python3.12/site-packages/kubetest/utils.py:130: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1726906322237,"stop":1726906322237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1726907025547,"stop":1726907025547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726907025547,"stop":1726907025547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726907025547,"stop":1726907025548,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1726907025548,"stop":1726907025548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1726907025548,"stop":1726907025548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1726907025550,"stop":1726907025550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1726907025550,"stop":1726907025550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1726907025550,"stop":1726907025554,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1726907025655,"stop":1726907025655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","statusTrace":"self = <pytest_bdd.runner.ScenarioRunner object at 0x732439675280>\nitem = <Function test_scenarios[file:features/0_1_mindwm_eda.feature-Mindwm event driven architecture-Redpanda]>\n\n    def pytest_runtest_call(self, item: Item):\n        if \"pytest_bdd_scenario\" in list(map(attrgetter(\"name\"), item.iter_markers())):\n            self.request = item._request\n            self.feature = self.request.getfixturevalue(\"feature\")\n            self.scenario = self.request.getfixturevalue(\"scenario\")\n            self.plugin_manager = self.request.config.hook\n            self.plugin_manager.pytest_bdd_before_scenario(\n                request=self.request, feature=self.feature, scenario=self.scenario\n            )\n            try:\n>               self.plugin_manager.pytest_bdd_run_scenario(\n                    request=self.request,\n                    feature=self.feature,\n                    scenario=self.scenario,\n                )\n\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:59: in pytest_bdd_run_scenario\n    return step_dispatcher(steps)\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:69: in dispatcher\n    self.plugin_manager.pytest_bdd_run_step(\n.venv/lib/python3.12/site-packages/pytest_bdd/runner.py:128: in pytest_bdd_run_step\n    step_result = step_caller()\nconftest.py:436: in deployment_ready\n    deployment = utils.deployment_wait_for(kube, deployment_name, namespace)\nutils.py:286: in deployment_wait_for\n    kubetest_utils.wait_for_condition(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncondition = <Condition (name: deployment neo4j-cdc-console exists, met: False)>\ntimeout = 180, interval = 5, fail_on_api_error = True\n\n    def wait_for_condition(\n        condition: Condition,\n        timeout: int = None,\n        interval: Union[int, float] = 1,\n        fail_on_api_error: bool = True,\n    ) -> None:\n        \"\"\"Wait for a condition to be met.\n    \n        Args:\n            condition: The Condition to wait for.\n            timeout: The maximum time to wait, in seconds, for the condition to be met.\n                If unspecified, this function will wait indefinitely. If specified and\n                the timeout is met or exceeded, a TimeoutError will be raised.\n            interval: The time, in seconds, to wait before re-checking the condition.\n            fail_on_api_error: Fail the condition checks if a Kubernetes API error is\n                incurred. An API error can be raised for a number of reasons, including\n                a Pod being restarted and temporarily unavailable. Disabling this will\n                cause those errors to be ignored, allowing the check to continue until\n                timeout or resolution. (default: True).\n    \n        Raises:\n            TimeoutError: The specified timeout was exceeded.\n        \"\"\"\n        log.info(f\"waiting for condition: {condition}\")\n    \n        # define the maximum time to wait. once this is met, we should\n        # stop waiting.\n        max_time = None\n        if timeout is not None:\n            max_time = time.time() + timeout\n    \n        # start the wait block\n        start = time.time()\n        while True:\n            if max_time and time.time() >= max_time:\n>               raise TimeoutError(\n                    f\"timed out ({timeout}s) while waiting for condition {condition}\"\n                )\nE               TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>\n\n.venv/lib/python3.12/site-packages/kubetest/utils.py:130: TimeoutError","steps":[{"name":"Mindwm crd 'xcontexts' is exists","time":{"start":1726907025567,"stop":1726907025567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xhosts' is exists","time":{"start":1726907025576,"stop":1726907025576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Mindwm crd 'xusers' is exists","time":{"start":1726907025616,"stop":1726907025616,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Kubernetes node 'localhost' is True","time":{"start":1726907025645,"stop":1726907025645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Namespace 'redpanda' is ready","time":{"start":1726907025663,"stop":1726907025663,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Wait for deployment 'redpanda-operator' ready state","time":{"start":1726907025673,"stop":1726907025673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Wait for deployment 'neo4j-cdc-console' ready state","time":{"start":1726907025689,"stop":1726907025689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_1_mindwm_eda.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"eda"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"0_1_mindwm_eda"},{"name":"host","value":"localhost"},{"name":"thread","value":"4714-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.0_1_mindwm_eda"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/0_1_mindwm_eda.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@eda', id='121')], language='en', keyword='Feature', name='Mindwm event driven architecture', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51')], id='52'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Knative', description='', steps=[Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78')], examples=[], id='79')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=36, column=3), tags=[], keyword='Scenario', name='Istio', description='', steps=[Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84')], examples=[], id='85')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=43, column=3), tags=[], keyword='Scenario', name='Redpanda', description='', steps=[Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91')], examples=[], id='92')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=51, column=3), tags=[], keyword='Scenario', name='Cert manager', description='', steps=[Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98')], examples=[], id='99')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Nats', description='', steps=[Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104')], examples=[], id='105')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=66, column=3), tags=[], keyword='Scenario', name='Monitoring', description='', steps=[Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')], examples=[], id='120'))]), comments=[]), uri='file:features/0_1_mindwm_eda.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_1_mindwm_eda.feature', registry={'121': Tag(location=Location(line=1, column=1), name='@eda', id='121'), '52': Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51')], id='52'), '50': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), '51': Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51'), '79': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Knative', description='', steps=[Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78')], examples=[], id='79'), '53': Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), '54': Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), '55': Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), '64': Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), '78': Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78'), '85': Scenario(location=Location(line=36, column=3), tags=[], keyword='Scenario', name='Istio', description='', steps=[Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84')], examples=[], id='85'), '80': Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), '84': Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84'), '92': Scenario(location=Location(line=43, column=3), tags=[], keyword='Scenario', name='Redpanda', description='', steps=[Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91')], examples=[], id='92'), '86': Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), '90': Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), '91': Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91'), '99': Scenario(location=Location(line=51, column=3), tags=[], keyword='Scenario', name='Cert manager', description='', steps=[Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98')], examples=[], id='99'), '93': Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), '98': Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98'), '105': Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Nats', description='', steps=[Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104')], examples=[], id='105'), '100': Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), '103': Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), '104': Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104'), '120': Scenario(location=Location(line=66, column=3), tags=[], keyword='Scenario', name='Monitoring', description='', steps=[Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')], examples=[], id='120'), '106': Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), '116': Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), '117': Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), '118': Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), '119': Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')}, pickles=[Pickle(id='129', uri='file:features/0_1_mindwm_eda.feature', name='Knative', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='122', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='123', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['53'], id='124', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-serving\" should exists'), PickleStep(argument=None, ast_node_ids=['54'], id='125', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-eventing\" should exists'), PickleStep(argument=None, ast_node_ids=['55'], id='126', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-operator\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='activator')]), PickleTableRow(cells=[PickleTableCell(value='autoscaler')]), PickleTableRow(cells=[PickleTableCell(value='autoscaler-hpa')]), PickleTableRow(cells=[PickleTableCell(value='controller')]), PickleTableRow(cells=[PickleTableCell(value='net-istio-controller')]), PickleTableRow(cells=[PickleTableCell(value='net-istio-webhook')]), PickleTableRow(cells=[PickleTableCell(value='webhook')])])), ast_node_ids=['64'], id='127', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"knative-serving\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='eventing-controller')]), PickleTableRow(cells=[PickleTableCell(value='eventing-webhook')]), PickleTableRow(cells=[PickleTableCell(value='imc-dispatcher')]), PickleTableRow(cells=[PickleTableCell(value='imc-controller')]), PickleTableRow(cells=[PickleTableCell(value='jetstream-ch-controller')]), PickleTableRow(cells=[PickleTableCell(value='job-sink')]), PickleTableRow(cells=[PickleTableCell(value='kafka-controller')]), PickleTableRow(cells=[PickleTableCell(value='kafka-webhook-eventing')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-controller')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-filter')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-ingress')]), PickleTableRow(cells=[PickleTableCell(value='nats-webhook')])])), ast_node_ids=['78'], id='128', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"knative-eventing\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['79']), Pickle(id='134', uri='file:features/0_1_mindwm_eda.feature', name='Istio', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='130', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='131', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['80'], id='132', type=<Type.outcome: 'Outcome'>, text='namespace \"istio-system\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')])])), ast_node_ids=['84'], id='133', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"istio-system\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['85']), Pickle(id='140', uri='file:features/0_1_mindwm_eda.feature', name='Redpanda', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='135', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='136', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['86'], id='137', type=<Type.outcome: 'Outcome'>, text='namespace \"redpanda\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='neo4j-cdc-console')])])), ast_node_ids=['90'], id='138', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['91'], id='139', type=<Type.outcome: 'Outcome'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['92']), Pickle(id='145', uri='file:features/0_1_mindwm_eda.feature', name='Cert manager', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='141', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='142', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['93'], id='143', type=<Type.outcome: 'Outcome'>, text='namespace \"cert-manager\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager-cainjector')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager-webhook')])])), ast_node_ids=['98'], id='144', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"cert-manager\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['99']), Pickle(id='151', uri='file:features/0_1_mindwm_eda.feature', name='Nats', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='146', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='147', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['100'], id='148', type=<Type.outcome: 'Outcome'>, text='namespace \"nats\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='nats-box')])])), ast_node_ids=['103'], id='149', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"nats\" namespace'), PickleStep(argument=None, ast_node_ids=['104'], id='150', type=<Type.outcome: 'Outcome'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['105']), Pickle(id='159', uri='file:features/0_1_mindwm_eda.feature', name='Monitoring', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='152', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='153', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['106'], id='154', type=<Type.outcome: 'Outcome'>, text='namespace \"monitoring\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='loki-gateway')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector-opentelemetry-collector')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-grafana')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-kube-state-metrics')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-victoria-metrics-operator')]), PickleTableRow(cells=[PickleTableCell(value='vmagent-vm-aio-victoria-metrics-k8s-stack')]), PickleTableRow(cells=[PickleTableCell(value='vmalert-vm-aio-victoria-metrics-k8s-stack')]), PickleTableRow(cells=[PickleTableCell(value='vmsingle-vm-aio-victoria-metrics-k8s-stack')])])), ast_node_ids=['116'], id='155', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"monitoring\" namespace'), PickleStep(argument=None, ast_node_ids=['117'], id='156', type=<Type.outcome: 'Outcome'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state'), PickleStep(argument=None, ast_node_ids=['118'], id='157', type=<Type.outcome: 'Outcome'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state'), PickleStep(argument=None, ast_node_ids=['119'], id='158', type=<Type.outcome: 'Outcome'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['120'])])"},{"name":"feature_source","value":"Source(uri='file:features/0_1_mindwm_eda.feature', data='@eda\\nFeature: Mindwm event driven architecture\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario: Knative\\n    And namespace \"knative-serving\" should exists \\n    And namespace \"knative-eventing\" should exists\\n    And namespace \"knative-operator\" should exists\\n    And following deployments is in ready state in \"knative-serving\" namespace\\n      | Deployment name      | \\n      | activator            |\\n      | autoscaler           |\\n      | autoscaler-hpa       | \\n      | controller           |\\n      | net-istio-controller |\\n      | net-istio-webhook    |\\n      | webhook              |\\n    And following deployments is in ready state in \"knative-eventing\" namespace\\n      | Deployment name         | \\n      | eventing-controller     |\\n      | eventing-webhook        |\\n      | imc-dispatcher          |\\n      | imc-controller          |\\n      | jetstream-ch-controller |\\n      | job-sink \\t\\t|\\n      | kafka-controller        |\\n      | kafka-webhook-eventing  |\\n      | mt-broker-controller    |\\n      | mt-broker-filter        |\\n      | mt-broker-ingress       |\\n      | nats-webhook            |\\n   \\n\\n  Scenario: Istio\\n    And namespace \"istio-system\" should exists\\n    And following deployments is in ready state in \"istio-system\" namespace\\n      | Deployment name         | \\n      | istiod                  |\\n      | istio-ingressgateway    |\\n\\n  Scenario: Redpanda\\n    And namespace \"redpanda\" should exists\\n    And following deployments is in ready state in \"redpanda\" namespace\\n      | Deployment name         | \\n      | redpanda-operator       |\\n      | neo4j-cdc-console       |\\n    And statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state\\n\\n  Scenario: Cert manager\\n    And namespace \"cert-manager\" should exists\\n    And following deployments is in ready state in \"cert-manager\" namespace\\n      | Deployment name          | \\n      | cert-manager             |\\n      | cert-manager-cainjector |\\n      | cert-manager-webhook     |\\n\\n  Scenario: Nats\\n    And namespace \"nats\" should exists\\n    And following deployments is in ready state in \"nats\" namespace\\n      | Deployment name         | \\n      | nats-box                |\\n    And statefulset \"nats\" in namespace \"nats\" is in ready state\\n\\n  Scenario: Monitoring\\n    And namespace \"monitoring\" should exists\\n    And following deployments is in ready state in \"monitoring\" namespace\\n      | Deployment name         | \\n      | loki-gateway | \\n      | otel-collector-opentelemetry-collector | \\n      | vm-aio-grafana | \\n      | vm-aio-kube-state-metrics | \\n      | vm-aio-victoria-metrics-operator | \\n      | vmagent-vm-aio-victoria-metrics-k8s-stack | \\n      | vmalert-vm-aio-victoria-metrics-k8s-stack | \\n      | vmsingle-vm-aio-victoria-metrics-k8s-stack | \\n    And statefulset \"loki\" in namespace \"monitoring\" is in ready state\\n    And statefulset \"tempo\" in namespace \"monitoring\" is in ready state\\n    And statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='140', uri='file:features/0_1_mindwm_eda.feature', name='Redpanda', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='135', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='136', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['86'], id='137', type=<Type.outcome: 'Outcome'>, text='namespace \"redpanda\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='neo4j-cdc-console')])])), ast_node_ids=['90'], id='138', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['91'], id='139', type=<Type.outcome: 'Outcome'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['92'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":2,"unknown":0,"total":8},"items":[{"uid":"c1c6ef295afbe7a","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/c1c6ef295afbe7a","status":"passed","time":{"start":1726875854730,"stop":1726875854861,"duration":131}},{"uid":"659d214595cb503f","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/659d214595cb503f","status":"broken","statusDetails":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","time":{"start":1726874439350,"stop":1726874619584,"duration":180234}},{"uid":"43b1c76bafa53c29","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/43b1c76bafa53c29","status":"broken","statusDetails":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","time":{"start":1726872487309,"stop":1726872667513,"duration":180204}},{"uid":"290e7fef16adb387","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/290e7fef16adb387","status":"broken","statusDetails":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","time":{"start":1726870827565,"stop":1726871007807,"duration":180242}},{"uid":"f2445639b5cea9ee","reportUrl":"https://mindwm.github.io/mindwm-gitops/150//#testresult/f2445639b5cea9ee","status":"broken","statusDetails":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","time":{"start":1726863171040,"stop":1726863351279,"duration":180239}},{"uid":"b05f83b8f80689a5","reportUrl":"https://mindwm.github.io/mindwm-gitops/149//#testresult/b05f83b8f80689a5","status":"passed","time":{"start":1726859117887,"stop":1726859157264,"duration":39377}},{"uid":"49bd3e434de92ed4","reportUrl":"https://mindwm.github.io/mindwm-gitops/148//#testresult/49bd3e434de92ed4","status":"broken","statusDetails":"TimeoutError: timed out (180s) while waiting for condition <Condition (name: deployment neo4j-cdc-console exists, met: False)>","time":{"start":1726857575486,"stop":1726857755805,"duration":180319}}]},"tags":["eda","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_1_mindwm_eda.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","pytest_bdd_scenario","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","namespace(create=False, name='default')"]},"source":"232ab72d802a57ab.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/0_1_mindwm_eda.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@eda', id='121')], language='en', keyword='Feature', name='Mindwm event driven architecture', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51')], id='52'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Knative', description='', steps=[Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78')], examples=[], id='79')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=36, column=3), tags=[], keyword='Scenario', name='Istio', description='', steps=[Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84')], examples=[], id='85')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=43, column=3), tags=[], keyword='Scenario', name='Redpanda', description='', steps=[Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91')], examples=[], id='92')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=51, column=3), tags=[], keyword='Scenario', name='Cert manager', description='', steps=[Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98')], examples=[], id='99')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Nats', description='', steps=[Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104')], examples=[], id='105')), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=66, column=3), tags=[], keyword='Scenario', name='Monitoring', description='', steps=[Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')], examples=[], id='120'))]), comments=[]), uri='file:features/0_1_mindwm_eda.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/0_1_mindwm_eda.feature', registry={'121': Tag(location=Location(line=1, column=1), name='@eda', id='121'), '52': Background(location=Location(line=3, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51')], id='52'), '50': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='50'), '51': Step(location=Location(line=5, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='51'), '79': Scenario(location=Location(line=7, column=3), tags=[], keyword='Scenario', name='Knative', description='', steps=[Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78')], examples=[], id='79'), '53': Step(location=Location(line=8, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-serving\" should exists', doc_string=None, data_table=None, id='53'), '54': Step(location=Location(line=9, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-eventing\" should exists', doc_string=None, data_table=None, id='54'), '55': Step(location=Location(line=10, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"knative-operator\" should exists', doc_string=None, data_table=None, id='55'), '64': Step(location=Location(line=11, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-serving\" namespace', doc_string=None, data_table=DataTable(location=Location(line=12, column=7), rows=[TableRow(location=Location(line=12, column=7), cells=[TableCell(location=Location(line=12, column=9), value='Deployment name')], id='56'), TableRow(location=Location(line=13, column=7), cells=[TableCell(location=Location(line=13, column=9), value='activator')], id='57'), TableRow(location=Location(line=14, column=7), cells=[TableCell(location=Location(line=14, column=9), value='autoscaler')], id='58'), TableRow(location=Location(line=15, column=7), cells=[TableCell(location=Location(line=15, column=9), value='autoscaler-hpa')], id='59'), TableRow(location=Location(line=16, column=7), cells=[TableCell(location=Location(line=16, column=9), value='controller')], id='60'), TableRow(location=Location(line=17, column=7), cells=[TableCell(location=Location(line=17, column=9), value='net-istio-controller')], id='61'), TableRow(location=Location(line=18, column=7), cells=[TableCell(location=Location(line=18, column=9), value='net-istio-webhook')], id='62'), TableRow(location=Location(line=19, column=7), cells=[TableCell(location=Location(line=19, column=9), value='webhook')], id='63')]), id='64'), '78': Step(location=Location(line=20, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"knative-eventing\" namespace', doc_string=None, data_table=DataTable(location=Location(line=21, column=7), rows=[TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='Deployment name')], id='65'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='eventing-controller')], id='66'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='eventing-webhook')], id='67'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='imc-dispatcher')], id='68'), TableRow(location=Location(line=25, column=7), cells=[TableCell(location=Location(line=25, column=9), value='imc-controller')], id='69'), TableRow(location=Location(line=26, column=7), cells=[TableCell(location=Location(line=26, column=9), value='jetstream-ch-controller')], id='70'), TableRow(location=Location(line=27, column=7), cells=[TableCell(location=Location(line=27, column=9), value='job-sink')], id='71'), TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='kafka-controller')], id='72'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='kafka-webhook-eventing')], id='73'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='mt-broker-controller')], id='74'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='mt-broker-filter')], id='75'), TableRow(location=Location(line=32, column=7), cells=[TableCell(location=Location(line=32, column=9), value='mt-broker-ingress')], id='76'), TableRow(location=Location(line=33, column=7), cells=[TableCell(location=Location(line=33, column=9), value='nats-webhook')], id='77')]), id='78'), '85': Scenario(location=Location(line=36, column=3), tags=[], keyword='Scenario', name='Istio', description='', steps=[Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84')], examples=[], id='85'), '80': Step(location=Location(line=37, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"istio-system\" should exists', doc_string=None, data_table=None, id='80'), '84': Step(location=Location(line=38, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"istio-system\" namespace', doc_string=None, data_table=DataTable(location=Location(line=39, column=7), rows=[TableRow(location=Location(line=39, column=7), cells=[TableCell(location=Location(line=39, column=9), value='Deployment name')], id='81'), TableRow(location=Location(line=40, column=7), cells=[TableCell(location=Location(line=40, column=9), value='istiod')], id='82'), TableRow(location=Location(line=41, column=7), cells=[TableCell(location=Location(line=41, column=9), value='istio-ingressgateway')], id='83')]), id='84'), '92': Scenario(location=Location(line=43, column=3), tags=[], keyword='Scenario', name='Redpanda', description='', steps=[Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91')], examples=[], id='92'), '86': Step(location=Location(line=44, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"redpanda\" should exists', doc_string=None, data_table=None, id='86'), '90': Step(location=Location(line=45, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"redpanda\" namespace', doc_string=None, data_table=DataTable(location=Location(line=46, column=7), rows=[TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='Deployment name')], id='87'), TableRow(location=Location(line=47, column=7), cells=[TableCell(location=Location(line=47, column=9), value='redpanda-operator')], id='88'), TableRow(location=Location(line=48, column=7), cells=[TableCell(location=Location(line=48, column=9), value='neo4j-cdc-console')], id='89')]), id='90'), '91': Step(location=Location(line=49, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state', doc_string=None, data_table=None, id='91'), '99': Scenario(location=Location(line=51, column=3), tags=[], keyword='Scenario', name='Cert manager', description='', steps=[Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98')], examples=[], id='99'), '93': Step(location=Location(line=52, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"cert-manager\" should exists', doc_string=None, data_table=None, id='93'), '98': Step(location=Location(line=53, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"cert-manager\" namespace', doc_string=None, data_table=DataTable(location=Location(line=54, column=7), rows=[TableRow(location=Location(line=54, column=7), cells=[TableCell(location=Location(line=54, column=9), value='Deployment name')], id='94'), TableRow(location=Location(line=55, column=7), cells=[TableCell(location=Location(line=55, column=9), value='cert-manager')], id='95'), TableRow(location=Location(line=56, column=7), cells=[TableCell(location=Location(line=56, column=9), value='cert-manager-cainjector')], id='96'), TableRow(location=Location(line=57, column=7), cells=[TableCell(location=Location(line=57, column=9), value='cert-manager-webhook')], id='97')]), id='98'), '105': Scenario(location=Location(line=59, column=3), tags=[], keyword='Scenario', name='Nats', description='', steps=[Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104')], examples=[], id='105'), '100': Step(location=Location(line=60, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"nats\" should exists', doc_string=None, data_table=None, id='100'), '103': Step(location=Location(line=61, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"nats\" namespace', doc_string=None, data_table=DataTable(location=Location(line=62, column=7), rows=[TableRow(location=Location(line=62, column=7), cells=[TableCell(location=Location(line=62, column=9), value='Deployment name')], id='101'), TableRow(location=Location(line=63, column=7), cells=[TableCell(location=Location(line=63, column=9), value='nats-box')], id='102')]), id='103'), '104': Step(location=Location(line=64, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state', doc_string=None, data_table=None, id='104'), '120': Scenario(location=Location(line=66, column=3), tags=[], keyword='Scenario', name='Monitoring', description='', steps=[Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')], examples=[], id='120'), '106': Step(location=Location(line=67, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"monitoring\" should exists', doc_string=None, data_table=None, id='106'), '116': Step(location=Location(line=68, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='following deployments is in ready state in \"monitoring\" namespace', doc_string=None, data_table=DataTable(location=Location(line=69, column=7), rows=[TableRow(location=Location(line=69, column=7), cells=[TableCell(location=Location(line=69, column=9), value='Deployment name')], id='107'), TableRow(location=Location(line=70, column=7), cells=[TableCell(location=Location(line=70, column=9), value='loki-gateway')], id='108'), TableRow(location=Location(line=71, column=7), cells=[TableCell(location=Location(line=71, column=9), value='otel-collector-opentelemetry-collector')], id='109'), TableRow(location=Location(line=72, column=7), cells=[TableCell(location=Location(line=72, column=9), value='vm-aio-grafana')], id='110'), TableRow(location=Location(line=73, column=7), cells=[TableCell(location=Location(line=73, column=9), value='vm-aio-kube-state-metrics')], id='111'), TableRow(location=Location(line=74, column=7), cells=[TableCell(location=Location(line=74, column=9), value='vm-aio-victoria-metrics-operator')], id='112'), TableRow(location=Location(line=75, column=7), cells=[TableCell(location=Location(line=75, column=9), value='vmagent-vm-aio-victoria-metrics-k8s-stack')], id='113'), TableRow(location=Location(line=76, column=7), cells=[TableCell(location=Location(line=76, column=9), value='vmalert-vm-aio-victoria-metrics-k8s-stack')], id='114'), TableRow(location=Location(line=77, column=7), cells=[TableCell(location=Location(line=77, column=9), value='vmsingle-vm-aio-victoria-metrics-k8s-stack')], id='115')]), id='116'), '117': Step(location=Location(line=78, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='117'), '118': Step(location=Location(line=79, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='118'), '119': Step(location=Location(line=80, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state', doc_string=None, data_table=None, id='119')}, pickles=[Pickle(id='129', uri='file:features/0_1_mindwm_eda.feature', name='Knative', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='122', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='123', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['53'], id='124', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-serving\" should exists'), PickleStep(argument=None, ast_node_ids=['54'], id='125', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-eventing\" should exists'), PickleStep(argument=None, ast_node_ids=['55'], id='126', type=<Type.outcome: 'Outcome'>, text='namespace \"knative-operator\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='activator')]), PickleTableRow(cells=[PickleTableCell(value='autoscaler')]), PickleTableRow(cells=[PickleTableCell(value='autoscaler-hpa')]), PickleTableRow(cells=[PickleTableCell(value='controller')]), PickleTableRow(cells=[PickleTableCell(value='net-istio-controller')]), PickleTableRow(cells=[PickleTableCell(value='net-istio-webhook')]), PickleTableRow(cells=[PickleTableCell(value='webhook')])])), ast_node_ids=['64'], id='127', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"knative-serving\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='eventing-controller')]), PickleTableRow(cells=[PickleTableCell(value='eventing-webhook')]), PickleTableRow(cells=[PickleTableCell(value='imc-dispatcher')]), PickleTableRow(cells=[PickleTableCell(value='imc-controller')]), PickleTableRow(cells=[PickleTableCell(value='jetstream-ch-controller')]), PickleTableRow(cells=[PickleTableCell(value='job-sink')]), PickleTableRow(cells=[PickleTableCell(value='kafka-controller')]), PickleTableRow(cells=[PickleTableCell(value='kafka-webhook-eventing')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-controller')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-filter')]), PickleTableRow(cells=[PickleTableCell(value='mt-broker-ingress')]), PickleTableRow(cells=[PickleTableCell(value='nats-webhook')])])), ast_node_ids=['78'], id='128', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"knative-eventing\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['79']), Pickle(id='134', uri='file:features/0_1_mindwm_eda.feature', name='Istio', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='130', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='131', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['80'], id='132', type=<Type.outcome: 'Outcome'>, text='namespace \"istio-system\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='istiod')]), PickleTableRow(cells=[PickleTableCell(value='istio-ingressgateway')])])), ast_node_ids=['84'], id='133', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"istio-system\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['85']), Pickle(id='140', uri='file:features/0_1_mindwm_eda.feature', name='Redpanda', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='135', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='136', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['86'], id='137', type=<Type.outcome: 'Outcome'>, text='namespace \"redpanda\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='neo4j-cdc-console')])])), ast_node_ids=['90'], id='138', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['91'], id='139', type=<Type.outcome: 'Outcome'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['92']), Pickle(id='145', uri='file:features/0_1_mindwm_eda.feature', name='Cert manager', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='141', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='142', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['93'], id='143', type=<Type.outcome: 'Outcome'>, text='namespace \"cert-manager\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager-cainjector')]), PickleTableRow(cells=[PickleTableCell(value='cert-manager-webhook')])])), ast_node_ids=['98'], id='144', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"cert-manager\" namespace')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['99']), Pickle(id='151', uri='file:features/0_1_mindwm_eda.feature', name='Nats', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='146', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='147', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['100'], id='148', type=<Type.outcome: 'Outcome'>, text='namespace \"nats\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='nats-box')])])), ast_node_ids=['103'], id='149', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"nats\" namespace'), PickleStep(argument=None, ast_node_ids=['104'], id='150', type=<Type.outcome: 'Outcome'>, text='statefulset \"nats\" in namespace \"nats\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['105']), Pickle(id='159', uri='file:features/0_1_mindwm_eda.feature', name='Monitoring', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='152', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='153', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['106'], id='154', type=<Type.outcome: 'Outcome'>, text='namespace \"monitoring\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='loki-gateway')]), PickleTableRow(cells=[PickleTableCell(value='otel-collector-opentelemetry-collector')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-grafana')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-kube-state-metrics')]), PickleTableRow(cells=[PickleTableCell(value='vm-aio-victoria-metrics-operator')]), PickleTableRow(cells=[PickleTableCell(value='vmagent-vm-aio-victoria-metrics-k8s-stack')]), PickleTableRow(cells=[PickleTableCell(value='vmalert-vm-aio-victoria-metrics-k8s-stack')]), PickleTableRow(cells=[PickleTableCell(value='vmsingle-vm-aio-victoria-metrics-k8s-stack')])])), ast_node_ids=['116'], id='155', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"monitoring\" namespace'), PickleStep(argument=None, ast_node_ids=['117'], id='156', type=<Type.outcome: 'Outcome'>, text='statefulset \"loki\" in namespace \"monitoring\" is in ready state'), PickleStep(argument=None, ast_node_ids=['118'], id='157', type=<Type.outcome: 'Outcome'>, text='statefulset \"tempo\" in namespace \"monitoring\" is in ready state'), PickleStep(argument=None, ast_node_ids=['119'], id='158', type=<Type.outcome: 'Outcome'>, text='statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['120'])])","Source(uri='file:features/0_1_mindwm_eda.feature', data='@eda\\nFeature: Mindwm event driven architecture\\n  Background:\\n    Given a MindWM environment\\n    Then all nodes in Kubernetes are ready\\n\\n  Scenario: Knative\\n    And namespace \"knative-serving\" should exists \\n    And namespace \"knative-eventing\" should exists\\n    And namespace \"knative-operator\" should exists\\n    And following deployments is in ready state in \"knative-serving\" namespace\\n      | Deployment name      | \\n      | activator            |\\n      | autoscaler           |\\n      | autoscaler-hpa       | \\n      | controller           |\\n      | net-istio-controller |\\n      | net-istio-webhook    |\\n      | webhook              |\\n    And following deployments is in ready state in \"knative-eventing\" namespace\\n      | Deployment name         | \\n      | eventing-controller     |\\n      | eventing-webhook        |\\n      | imc-dispatcher          |\\n      | imc-controller          |\\n      | jetstream-ch-controller |\\n      | job-sink \\t\\t|\\n      | kafka-controller        |\\n      | kafka-webhook-eventing  |\\n      | mt-broker-controller    |\\n      | mt-broker-filter        |\\n      | mt-broker-ingress       |\\n      | nats-webhook            |\\n   \\n\\n  Scenario: Istio\\n    And namespace \"istio-system\" should exists\\n    And following deployments is in ready state in \"istio-system\" namespace\\n      | Deployment name         | \\n      | istiod                  |\\n      | istio-ingressgateway    |\\n\\n  Scenario: Redpanda\\n    And namespace \"redpanda\" should exists\\n    And following deployments is in ready state in \"redpanda\" namespace\\n      | Deployment name         | \\n      | redpanda-operator       |\\n      | neo4j-cdc-console       |\\n    And statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state\\n\\n  Scenario: Cert manager\\n    And namespace \"cert-manager\" should exists\\n    And following deployments is in ready state in \"cert-manager\" namespace\\n      | Deployment name          | \\n      | cert-manager             |\\n      | cert-manager-cainjector |\\n      | cert-manager-webhook     |\\n\\n  Scenario: Nats\\n    And namespace \"nats\" should exists\\n    And following deployments is in ready state in \"nats\" namespace\\n      | Deployment name         | \\n      | nats-box                |\\n    And statefulset \"nats\" in namespace \"nats\" is in ready state\\n\\n  Scenario: Monitoring\\n    And namespace \"monitoring\" should exists\\n    And following deployments is in ready state in \"monitoring\" namespace\\n      | Deployment name         | \\n      | loki-gateway | \\n      | otel-collector-opentelemetry-collector | \\n      | vm-aio-grafana | \\n      | vm-aio-kube-state-metrics | \\n      | vm-aio-victoria-metrics-operator | \\n      | vmagent-vm-aio-victoria-metrics-k8s-stack | \\n      | vmalert-vm-aio-victoria-metrics-k8s-stack | \\n      | vmsingle-vm-aio-victoria-metrics-k8s-stack | \\n    And statefulset \"loki\" in namespace \"monitoring\" is in ready state\\n    And statefulset \"tempo\" in namespace \"monitoring\" is in ready state\\n    And statefulset \"vmalertmanager-vm-aio-victoria-metrics-k8s-stack\" in namespace \"monitoring\" is in ready state\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='140', uri='file:features/0_1_mindwm_eda.feature', name='Redpanda', language='en', steps=[PickleStep(argument=None, ast_node_ids=['50'], id='135', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['51'], id='136', type=<Type.outcome: 'Outcome'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['86'], id='137', type=<Type.outcome: 'Outcome'>, text='namespace \"redpanda\" should exists'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='redpanda-operator')]), PickleTableRow(cells=[PickleTableCell(value='neo4j-cdc-console')])])), ast_node_ids=['90'], id='138', type=<Type.outcome: 'Outcome'>, text='following deployments is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['91'], id='139', type=<Type.outcome: 'Outcome'>, text='statefulset \"neo4j-cdc\" in namespace \"redpanda\" is in ready state')], tags=[PickleTag(name='@eda', ast_node_id='121')], ast_node_ids=['92'])"]}