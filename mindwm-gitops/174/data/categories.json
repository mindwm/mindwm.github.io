{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Test defects","children":[{"name":"pytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: \"all nodes in Kubernetes are ready\". Step keyword: \"And\". Line 6 in scenario \"Create Contexts and Verify All Related Resources Are in Ready State\" in the feature \"file:features/8_two_contexts.feature\"","children":[{"name":"test_scenarios[file:features/8_two_contexts.feature-Context Resource Readiness Verification-Create Contexts and Verify All Related Resources Are in Ready State[table_rows:[line: 50]]]","uid":"8d8a17f788588f","parentUid":"71788866f89789c4268915b5af99ca55","status":"broken","time":{"start":1727972064077,"stop":1727972064163,"duration":86},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Feature(gherkin_document=GherkinDocument(uri='file:features/8_two_contexts.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@mindwm_test', id='909')], language='en', keyword='Feature', name='Context Resource Readiness Verification', description='', children=[FeatureChild(rule=None, background=Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), scenario=None), FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=16, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='883'), Step(location=Location(line=19, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=20, column=7), rows=[TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='Knative service name')], id='884'), TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='iocontext')], id='885'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='kafka-cdc')], id='886'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='dead-letter')], id='887'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='pong')], id='888')]), id='889'), Step(location=Location(line=27, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=28, column=7), rows=[TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='Knative trigger name')], id='890'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='iocontext-trigger')], id='891'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='kafka-cdc-trigger')], id='892'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong-trigger')], id='893')]), id='894'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative broker name')], id='895'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='context-broker')], id='896')]), id='897'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='898'), Step(location=Location(line=40, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='899'), Step(location=Location(line=43, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=44, column=7), rows=[TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='Deployment name')], id='900'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='kafka-cdc-00001-deployment')], id='901'), TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='iocontext-00001-deployment')], id='902')]), id='903')], examples=[Examples(location=Location(line=48, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=50, column=7), cells=[TableCell(location=Location(line=50, column=9), value='context1')], id='905'), TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context2')], id='906')], id='907')], id='908'))]), comments=[Comment(location=Location(line=12, column=1), text='    # Verify Namespace'), Comment(location=Location(line=15, column=1), text='    # Verify StatefulSets'), Comment(location=Location(line=18, column=1), text='    # Verify Knative Services'), Comment(location=Location(line=26, column=1), text='    # Verify Knative Triggers'), Comment(location=Location(line=33, column=1), text='    # Verify Knative Brokers'), Comment(location=Location(line=38, column=1), text='    # Verify Kafka Topics and Sources'), Comment(location=Location(line=42, column=1), text='    # Verify Deployments')]), uri='file:features/8_two_contexts.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_two_contexts.feature', registry={'909': Tag(location=Location(line=1, column=1), name='@mindwm_test', id='909'), '879': Background(location=Location(line=4, column=3), keyword='Background', name='', description='', steps=[Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878')], id='879'), '877': Step(location=Location(line=5, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='a MindWM environment', doc_string=None, data_table=None, id='877'), '878': Step(location=Location(line=6, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='all nodes in Kubernetes are ready', doc_string=None, data_table=None, id='878'), '908': Scenario(location=Location(line=8, column=3), tags=[], keyword='Scenario Outline', name='Create Contexts and Verify All Related Resources Are in Ready State', description='', steps=[Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), Step(location=Location(line=16, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='883'), Step(location=Location(line=19, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=20, column=7), rows=[TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='Knative service name')], id='884'), TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='iocontext')], id='885'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='kafka-cdc')], id='886'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='dead-letter')], id='887'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='pong')], id='888')]), id='889'), Step(location=Location(line=27, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=28, column=7), rows=[TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='Knative trigger name')], id='890'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='iocontext-trigger')], id='891'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='kafka-cdc-trigger')], id='892'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong-trigger')], id='893')]), id='894'), Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative broker name')], id='895'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='context-broker')], id='896')]), id='897'), Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='898'), Step(location=Location(line=40, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='899'), Step(location=Location(line=43, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=44, column=7), rows=[TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='Deployment name')], id='900'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='kafka-cdc-00001-deployment')], id='901'), TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='iocontext-00001-deployment')], id='902')]), id='903')], examples=[Examples(location=Location(line=48, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=50, column=7), cells=[TableCell(location=Location(line=50, column=9), value='context1')], id='905'), TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context2')], id='906')], id='907')], id='908'), '880': Step(location=Location(line=9, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='God creates a MindWM context with the name \"<context>\"', doc_string=None, data_table=None, id='880'), '881': Step(location=Location(line=10, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='the context should be ready and operable', doc_string=None, data_table=None, id='881'), '882': Step(location=Location(line=13, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='namespace \"context-<context>\" should exist', doc_string=None, data_table=None, id='882'), '883': Step(location=Location(line=16, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state', doc_string=None, data_table=None, id='883'), '889': Step(location=Location(line=19, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative services are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=20, column=7), rows=[TableRow(location=Location(line=20, column=7), cells=[TableCell(location=Location(line=20, column=9), value='Knative service name')], id='884'), TableRow(location=Location(line=21, column=7), cells=[TableCell(location=Location(line=21, column=9), value='iocontext')], id='885'), TableRow(location=Location(line=22, column=7), cells=[TableCell(location=Location(line=22, column=9), value='kafka-cdc')], id='886'), TableRow(location=Location(line=23, column=7), cells=[TableCell(location=Location(line=23, column=9), value='dead-letter')], id='887'), TableRow(location=Location(line=24, column=7), cells=[TableCell(location=Location(line=24, column=9), value='pong')], id='888')]), id='889'), '894': Step(location=Location(line=27, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative triggers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=28, column=7), rows=[TableRow(location=Location(line=28, column=7), cells=[TableCell(location=Location(line=28, column=9), value='Knative trigger name')], id='890'), TableRow(location=Location(line=29, column=7), cells=[TableCell(location=Location(line=29, column=9), value='iocontext-trigger')], id='891'), TableRow(location=Location(line=30, column=7), cells=[TableCell(location=Location(line=30, column=9), value='kafka-cdc-trigger')], id='892'), TableRow(location=Location(line=31, column=7), cells=[TableCell(location=Location(line=31, column=9), value='pong-trigger')], id='893')]), id='894'), '897': Step(location=Location(line=34, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following knative brokers are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=35, column=7), rows=[TableRow(location=Location(line=35, column=7), cells=[TableCell(location=Location(line=35, column=9), value='Knative broker name')], id='895'), TableRow(location=Location(line=36, column=7), cells=[TableCell(location=Location(line=36, column=9), value='context-broker')], id='896')]), id='897'), '898': Step(location=Location(line=39, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace', doc_string=None, data_table=None, id='898'), '899': Step(location=Location(line=40, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace', doc_string=None, data_table=None, id='899'), '903': Step(location=Location(line=43, column=5), keyword='And ', keyword_type=<KeywordType.conjunction: 'Conjunction'>, text='the following deployments are in a ready state in the \"context-<context>\" namespace', doc_string=None, data_table=DataTable(location=Location(line=44, column=7), rows=[TableRow(location=Location(line=44, column=7), cells=[TableCell(location=Location(line=44, column=9), value='Deployment name')], id='900'), TableRow(location=Location(line=45, column=7), cells=[TableCell(location=Location(line=45, column=9), value='kafka-cdc-00001-deployment')], id='901'), TableRow(location=Location(line=46, column=7), cells=[TableCell(location=Location(line=46, column=9), value='iocontext-00001-deployment')], id='902')]), id='903'), '907': Examples(location=Location(line=48, column=5), tags=[], keyword='Examples', name='', description='', table_header=TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='context')], id='904'), table_body=[TableRow(location=Location(line=50, column=7), cells=[TableCell(location=Location(line=50, column=9), value='context1')], id='905'), TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context2')], id='906')], id='907'), '904': TableRow(location=Location(line=49, column=7), cells=[TableCell(location=Location(line=49, column=9), value='context')], id='904'), '905': TableRow(location=Location(line=50, column=7), cells=[TableCell(location=Location(line=50, column=9), value='context1')], id='905'), '906': TableRow(location=Location(line=51, column=7), cells=[TableCell(location=Location(line=51, column=9), value='context2')], id='906')}, pickles=[Pickle(id='922', uri='file:features/8_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='910', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='911', type=<Type.context: 'Context'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '905'], id='912', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"context1\"'), PickleStep(argument=None, ast_node_ids=['881', '905'], id='913', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '905'], id='914', type=<Type.outcome: 'Outcome'>, text='namespace \"context-context1\" should exist'), PickleStep(argument=None, ast_node_ids=['883', '905'], id='915', type=<Type.outcome: 'Outcome'>, text='statefulset \"context1-neo4j\" in namespace \"context-context1\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['889', '905'], id='916', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['894', '905'], id='917', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['897', '905'], id='918', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=None, ast_node_ids=['898', '905'], id='919', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-context1-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['899', '905'], id='920', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-context1-cdc-kafkasource\" is in ready state in \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['903', '905'], id='921', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-context1\" namespace')], tags=[PickleTag(name='@mindwm_test', ast_node_id='909')], ast_node_ids=['908', '905']), Pickle(id='935', uri='file:features/8_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='923', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='924', type=<Type.context: 'Context'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '906'], id='925', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"context2\"'), PickleStep(argument=None, ast_node_ids=['881', '906'], id='926', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '906'], id='927', type=<Type.outcome: 'Outcome'>, text='namespace \"context-context2\" should exist'), PickleStep(argument=None, ast_node_ids=['883', '906'], id='928', type=<Type.outcome: 'Outcome'>, text='statefulset \"context2-neo4j\" in namespace \"context-context2\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['889', '906'], id='929', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-context2\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['894', '906'], id='930', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-context2\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['897', '906'], id='931', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-context2\" namespace'), PickleStep(argument=None, ast_node_ids=['898', '906'], id='932', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-context2-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['899', '906'], id='933', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-context2-cdc-kafkasource\" is in ready state in \"context-context2\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['903', '906'], id='934', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-context2\" namespace')], tags=[PickleTag(name='@mindwm_test', ast_node_id='909')], ast_node_ids=['908', '906'])])","Source(uri='file:features/8_two_contexts.feature', data='@mindwm_test\\nFeature: Context Resource Readiness Verification\\n\\n  Background:\\n    Given a MindWM environment\\n    And all nodes in Kubernetes are ready\\n\\n  Scenario Outline: Create Contexts and Verify All Related Resources Are in Ready State\\n    When God creates a MindWM context with the name \"<context>\"\\n    Then the context should be ready and operable\\n\\n    # Verify Namespace\\n    And namespace \"context-<context>\" should exist\\n\\n    # Verify StatefulSets\\n    And statefulset \"<context>-neo4j\" in namespace \"context-<context>\" is in ready state\\n\\n    # Verify Knative Services\\n    And the following knative services are in a ready state in the \"context-<context>\" namespace\\n      | Knative service name |\\n      | iocontext            |\\n      | kafka-cdc            |\\n      | dead-letter          |\\n      | pong                 |\\n\\n    # Verify Knative Triggers\\n    And the following knative triggers are in a ready state in the \"context-<context>\" namespace\\n      | Knative trigger name          |\\n      | iocontext-trigger             |\\n      | kafka-cdc-trigger             |\\n      | pong-trigger                  |\\n\\n    # Verify Knative Brokers\\n    And the following knative brokers are in a ready state in the \"context-<context>\" namespace\\n      | Knative broker name           |\\n      | context-broker                |\\n\\n    # Verify Kafka Topics and Sources\\n    And kafka topic \"context-<context>-cdc\" is in ready state in \"redpanda\" namespace\\n    And kafka source \"context-<context>-cdc-kafkasource\" is in ready state in \"context-<context>\" namespace\\n\\n    # Verify Deployments\\n    And the following deployments are in a ready state in the \"context-<context>\" namespace\\n      | Deployment name               |\\n      | kafka-cdc-00001-deployment    |\\n      | iocontext-00001-deployment    |\\n\\n    Examples:\\n      | context  |\\n      | context1 |\\n      | context2 |\\n\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='922', uri='file:features/8_two_contexts.feature', name='Create Contexts and Verify All Related Resources Are in Ready State', language='en', steps=[PickleStep(argument=None, ast_node_ids=['877'], id='910', type=<Type.context: 'Context'>, text='a MindWM environment'), PickleStep(argument=None, ast_node_ids=['878'], id='911', type=<Type.context: 'Context'>, text='all nodes in Kubernetes are ready'), PickleStep(argument=None, ast_node_ids=['880', '905'], id='912', type=<Type.action: 'Action'>, text='God creates a MindWM context with the name \"context1\"'), PickleStep(argument=None, ast_node_ids=['881', '905'], id='913', type=<Type.outcome: 'Outcome'>, text='the context should be ready and operable'), PickleStep(argument=None, ast_node_ids=['882', '905'], id='914', type=<Type.outcome: 'Outcome'>, text='namespace \"context-context1\" should exist'), PickleStep(argument=None, ast_node_ids=['883', '905'], id='915', type=<Type.outcome: 'Outcome'>, text='statefulset \"context1-neo4j\" in namespace \"context-context1\" is in ready state'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative service name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc')]), PickleTableRow(cells=[PickleTableCell(value='dead-letter')]), PickleTableRow(cells=[PickleTableCell(value='pong')])])), ast_node_ids=['889', '905'], id='916', type=<Type.outcome: 'Outcome'>, text='the following knative services are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative trigger name')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-trigger')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-trigger')]), PickleTableRow(cells=[PickleTableCell(value='pong-trigger')])])), ast_node_ids=['894', '905'], id='917', type=<Type.outcome: 'Outcome'>, text='the following knative triggers are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Knative broker name')]), PickleTableRow(cells=[PickleTableCell(value='context-broker')])])), ast_node_ids=['897', '905'], id='918', type=<Type.outcome: 'Outcome'>, text='the following knative brokers are in a ready state in the \"context-context1\" namespace'), PickleStep(argument=None, ast_node_ids=['898', '905'], id='919', type=<Type.outcome: 'Outcome'>, text='kafka topic \"context-context1-cdc\" is in ready state in \"redpanda\" namespace'), PickleStep(argument=None, ast_node_ids=['899', '905'], id='920', type=<Type.outcome: 'Outcome'>, text='kafka source \"context-context1-cdc-kafkasource\" is in ready state in \"context-context1\" namespace'), PickleStep(argument=PickleStepArgument(doc_string=None, data_table=PickleTable(rows=[PickleTableRow(cells=[PickleTableCell(value='Deployment name')]), PickleTableRow(cells=[PickleTableCell(value='kafka-cdc-00001-deployment')]), PickleTableRow(cells=[PickleTableCell(value='iocontext-00001-deployment')])])), ast_node_ids=['903', '905'], id='921', type=<Type.outcome: 'Outcome'>, text='the following deployments are in a ready state in the \"context-context1\" namespace')], tags=[PickleTag(name='@mindwm_test', ast_node_id='909')], ast_node_ids=['908', '905'])"],"tags":["pytest_bdd_scenario","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/8_two_contexts.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","mindwm_test","namespace(create=False, name='default')"]}],"uid":"71788866f89789c4268915b5af99ca55"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}