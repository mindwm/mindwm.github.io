{"uid":"225ab849024a3eee","name":"test_scenarios[file:features/mindwm_crd.feature-Minwdm custom resource definition-]","fullName":"features.mindwm_crd#test_scenarios","historyId":"331433f03a41f15a9c485230358dbba1","time":{"start":1726503893031,"stop":1726503894067,"duration":1036},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1726503893000,"stop":1726503893000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"parameter_type_registry","time":{"start":1726503893031,"stop":1726503893031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726503893031,"stop":1726503893031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"steps_left","time":{"start":1726503893031,"stop":1726503893031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_registry","time":{"start":1726503893031,"stop":1726503893031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"step_matcher","time":{"start":1726503893031,"stop":1726503893031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kube","time":{"start":1726503893032,"stop":1726503893035,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubecontext","time":{"start":1726503893032,"stop":1726503893032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"kubeconfig","time":{"start":1726503893032,"stop":1726503893032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"ctx","time":{"start":1726503893045,"stop":1726503893045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())"},{"name":"tag","value":"@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')"},{"name":"tag","value":"pytest_bdd_scenario"},{"name":"tag","value":"crd"},{"name":"tag","value":"namespace(create=False, name='default')"},{"name":"parentSuite","value":"features"},{"name":"suite","value":"mindwm_crd"},{"name":"host","value":"localhost"},{"name":"thread","value":"38729-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"features.mindwm_crd"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"feature","value":"Feature(gherkin_document=GherkinDocument(uri='file:features/mindwm_crd.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd', id='11')], language='en', keyword='Feature', name='Minwdm custom resource definition', description='', children=[FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=3, column=3), tags=[], keyword='Scenario', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'))]), comments=[]), uri='file:features/mindwm_crd.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature', registry={'11': Tag(location=Location(line=1, column=1), name='@crd', id='11'), '10': Scenario(location=Location(line=3, column=3), tags=[], keyword='Scenario', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'), '7': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), '8': Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')}, pickles=[Pickle(id='15', uri='file:features/mindwm_crd.feature', name='', language='en', steps=[PickleStep(argument=None, ast_node_ids=['7'], id='12', type=<Type.context: 'Context'>, text='MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='13', type=<Type.action: 'Action'>, text='the user creates a MindWM context with the name xxx3'), PickleStep(argument=None, ast_node_ids=['9'], id='14', type=<Type.outcome: 'Outcome'>, text='validate that the context is ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='11')], ast_node_ids=['10'])])"},{"name":"feature_source","value":"Source(uri='file:features/mindwm_crd.feature', data='@crd\\nFeature: Minwdm custom resource definition\\n  Scenario: \\n    Given MindWM environment\\n    When the user creates a MindWM context with the name xxx3\\n    Then validate that the context is ready and operable\\n', media_type='text/x.cucumber.gherkin+plain')"},{"name":"scenario","value":"Pickle(id='15', uri='file:features/mindwm_crd.feature', name='', language='en', steps=[PickleStep(argument=None, ast_node_ids=['7'], id='12', type=<Type.context: 'Context'>, text='MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='13', type=<Type.action: 'Action'>, text='the user creates a MindWM context with the name xxx3'), PickleStep(argument=None, ast_node_ids=['9'], id='14', type=<Type.outcome: 'Outcome'>, text='validate that the context is ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='11')], ast_node_ids=['10'])"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["pytest_bdd_scenario","crd","@pytest.mark.usefixtures('feature', 'scenario', 'feature_source')","scenarios(PosixPath('/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature'), filter_=None, encoding='utf-8', features_base_dir=None, features_base_url=None, features_path_type=None, features_mimetype=None, parser_type=None, parse_args=Args(args=(), kwargs={}), locators=())","namespace(create=False, name='default')"]},"source":"225ab849024a3eee.json","parameterValues":["Feature(gherkin_document=GherkinDocument(uri='file:features/mindwm_crd.feature', feature=Feature(location=Location(line=2, column=1), tags=[Tag(location=Location(line=1, column=1), name='@crd', id='11')], language='en', keyword='Feature', name='Minwdm custom resource definition', description='', children=[FeatureChild(rule=None, background=None, scenario=Scenario(location=Location(line=3, column=3), tags=[], keyword='Scenario', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'))]), comments=[]), uri='file:features/mindwm_crd.feature', filename='/home/ci/mindwm-gitops/tests/mindwm_bdd/features/mindwm_crd.feature', registry={'11': Tag(location=Location(line=1, column=1), name='@crd', id='11'), '10': Scenario(location=Location(line=3, column=3), tags=[], keyword='Scenario', name='', description='', steps=[Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')], examples=[], id='10'), '7': Step(location=Location(line=4, column=5), keyword='Given ', keyword_type=<KeywordType.context: 'Context'>, text='MindWM environment', doc_string=None, data_table=None, id='7'), '8': Step(location=Location(line=5, column=5), keyword='When ', keyword_type=<KeywordType.action: 'Action'>, text='the user creates a MindWM context with the name xxx3', doc_string=None, data_table=None, id='8'), '9': Step(location=Location(line=6, column=5), keyword='Then ', keyword_type=<KeywordType.outcome: 'Outcome'>, text='validate that the context is ready and operable', doc_string=None, data_table=None, id='9')}, pickles=[Pickle(id='15', uri='file:features/mindwm_crd.feature', name='', language='en', steps=[PickleStep(argument=None, ast_node_ids=['7'], id='12', type=<Type.context: 'Context'>, text='MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='13', type=<Type.action: 'Action'>, text='the user creates a MindWM context with the name xxx3'), PickleStep(argument=None, ast_node_ids=['9'], id='14', type=<Type.outcome: 'Outcome'>, text='validate that the context is ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='11')], ast_node_ids=['10'])])","Source(uri='file:features/mindwm_crd.feature', data='@crd\\nFeature: Minwdm custom resource definition\\n  Scenario: \\n    Given MindWM environment\\n    When the user creates a MindWM context with the name xxx3\\n    Then validate that the context is ready and operable\\n', media_type='text/x.cucumber.gherkin+plain')","Pickle(id='15', uri='file:features/mindwm_crd.feature', name='', language='en', steps=[PickleStep(argument=None, ast_node_ids=['7'], id='12', type=<Type.context: 'Context'>, text='MindWM environment'), PickleStep(argument=None, ast_node_ids=['8'], id='13', type=<Type.action: 'Action'>, text='the user creates a MindWM context with the name xxx3'), PickleStep(argument=None, ast_node_ids=['9'], id='14', type=<Type.outcome: 'Outcome'>, text='validate that the context is ready and operable')], tags=[PickleTag(name='@crd', ast_node_id='11')], ast_node_ids=['10'])"]}